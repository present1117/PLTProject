
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x03fy\x0e\xfd\xf5\xd6\xb1\x96\x8eU\xb2\x86\x1d\xcc\x8a'
    
_lr_action_items = {'DEDENT':([22,27,35,36,38,40,42,43,55,63,71,75,76,103,106,126,131,132,133,134,135,136,137,139,140,141,142,144,146,148,172,173,176,177,185,191,194,199,200,207,212,213,215,216,],[29,-4,-3,-5,44,46,50,-6,61,-10,-11,-86,-28,-27,-30,-21,-26,172,-16,-25,-15,-14,-24,-13,-88,-18,-17,-19,-20,-29,-87,-89,-92,-91,-90,-85,-79,-80,-78,-81,-83,-82,-77,-84,]),'*':([79,82,83,87,88,89,91,93,95,96,99,101,110,111,114,149,150,151,153,156,158,166,167,168,179,181,190,],[-64,-60,-67,-51,-63,-55,-58,-62,123,-66,-65,-61,-56,-57,-59,123,123,-68,-71,-70,-73,-52,-54,-53,-72,-74,-69,]),'RETURN':([75,76,103,104,106,126,131,132,133,134,135,136,137,139,140,141,142,144,146,148,172,173,176,177,185,191,194,199,200,207,212,213,215,216,],[-86,-28,-27,129,-30,-21,-26,129,-16,-25,-15,-14,-24,-13,-88,-18,-17,-19,-20,-29,-87,-89,-92,-91,-90,-85,-79,-80,-78,-81,-83,-82,-77,-84,]),'GLOBAL':([41,48,49,58,126,],[-93,-23,53,-22,-21,]),'NUMBER':([20,21,23,26,30,72,84,85,86,92,100,107,108,113,115,118,119,120,121,123,124,125,127,129,130,143,152,157,161,164,165,187,193,198,201,205,],[26,28,31,34,37,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,196,79,206,79,]),'WHILE':([75,76,103,104,106,126,131,132,133,134,135,136,137,139,140,141,142,144,146,148,172,173,176,177,185,191,194,199,200,207,212,213,215,216,],[-86,-28,-27,130,-30,-21,-26,130,-16,-25,-15,-14,-24,-13,-88,-18,-17,-19,-20,-29,-87,-89,-92,-91,-90,-85,-79,-80,-78,-81,-83,-82,-77,-84,]),'BOARD':([1,29,],[5,-2,]),'DEF':([41,48,49,55,58,75,76,103,104,106,126,131,132,133,134,135,136,137,139,140,141,142,144,146,148,172,173,176,177,185,191,194,199,200,207,212,213,215,216,],[-93,-23,54,62,-22,-86,-28,-27,54,-30,-21,-26,54,-16,-25,-15,-14,-24,-13,-88,-18,62,-19,-20,-29,-87,-89,-92,-91,-90,-85,-79,-80,-78,-81,-83,-82,-77,-84,]),'/':([79,82,83,87,88,89,91,93,95,96,99,101,110,111,114,149,150,151,153,156,158,166,167,168,179,181,190,],[-64,-60,-67,-51,-63,-55,-58,-62,125,-66,-65,-61,-56,-57,-59,125,125,-68,-71,-70,-73,-52,-54,-53,-72,-74,-69,]),'%':([79,82,83,87,88,89,91,93,95,96,99,101,110,111,114,149,150,151,153,156,158,166,167,168,179,181,190,],[-64,-60,-67,-51,-63,-55,-58,-62,124,-66,-65,-61,-56,-57,-59,124,124,-68,-71,-70,-73,-52,-54,-53,-72,-74,-69,]),')':([79,80,81,82,83,87,88,89,90,91,93,94,95,96,98,99,101,109,110,111,114,117,118,128,149,150,151,153,155,156,158,159,160,162,163,166,167,168,169,178,179,180,181,182,183,184,190,],[-64,-37,-41,-60,-67,-51,-63,-55,-35,-58,-62,-40,-48,-66,-34,-65,-61,151,-56,-57,-59,-75,158,-39,-49,-50,-68,-71,-38,-70,-73,181,-43,-42,-44,-52,-54,-53,-36,190,-72,-76,-74,-45,-46,-47,-69,]),'(':([72,84,85,86,92,93,100,107,108,113,115,118,119,120,121,123,124,125,127,129,130,143,152,157,161,164,165,187,198,205,],[84,84,84,84,84,118,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'+':([72,79,81,82,83,84,85,86,87,88,89,91,92,93,95,96,99,100,101,107,108,110,111,113,114,115,118,119,120,121,123,124,125,127,129,130,143,149,150,151,152,153,156,157,158,160,161,162,163,164,165,166,167,168,179,181,182,183,184,187,190,198,205,],[85,-64,107,-60,-67,85,85,85,-51,-63,-55,-58,85,-62,-48,-66,-65,85,-61,85,85,-56,-57,85,-59,85,85,85,85,85,85,85,85,85,85,85,85,-49,-50,-68,85,-71,-70,85,-73,107,85,107,107,85,85,-52,-54,-53,-72,-74,107,107,107,85,-69,85,85,]),'NEWLINE':([6,9,11,17,21,25,28,30,31,34,37,56,64,67,74,78,79,80,81,82,83,87,88,89,90,91,93,94,95,96,97,98,99,101,105,110,111,114,128,145,147,149,150,151,153,155,156,158,160,162,163,166,167,168,169,170,179,181,182,183,184,186,189,190,195,202,208,209,211,214,],[10,14,16,24,27,33,35,36,38,42,43,63,71,75,75,75,-64,-37,-41,-60,-67,-51,-63,-55,-35,-58,-62,-40,-48,-66,126,-34,-65,-61,75,-56,-57,-59,-39,176,177,-49,-50,-68,-71,-38,-70,-73,-43,-42,-44,-52,-54,-53,-36,185,-72,-74,-45,-46,-47,75,75,-69,75,75,75,75,75,75,]),'-':([72,79,81,82,83,84,85,86,87,88,89,91,92,93,95,96,99,100,101,107,108,110,111,113,114,115,118,119,120,121,123,124,125,127,129,130,143,149,150,151,152,153,156,157,158,160,161,162,163,164,165,166,167,168,179,181,182,183,184,187,190,198,205,],[86,-64,108,-60,-67,86,86,86,-51,-63,-55,-58,86,-62,-48,-66,-65,86,-61,86,86,-56,-57,86,-59,86,86,86,86,86,86,86,86,86,86,86,86,-49,-50,-68,86,-71,-70,86,-73,108,86,108,108,86,86,-52,-54,-53,-72,-74,108,108,108,86,-69,86,86,]),',':([66,68,69,77,79,80,81,82,83,87,88,89,90,91,93,94,95,96,98,99,101,102,109,110,111,114,116,117,128,149,150,151,153,155,156,158,159,160,162,163,166,167,168,169,179,180,181,182,183,184,190,],[73,-32,-33,73,-64,-37,-41,-60,-67,-51,-63,-55,-35,-58,-62,-40,-48,-66,-34,-65,-61,-31,152,-56,-57,-59,157,-75,-39,-49,-50,-68,-71,-38,-70,-73,157,-43,-42,-44,-52,-54,-53,-36,-72,-76,-74,-45,-46,-47,-69,]),'RULE':([8,44,],[12,-8,]),'.':([79,82,83,88,89,91,93,96,99,101,114,151,153,156,158,179,181,190,],[-64,-60,-67,-63,112,-58,-62,-66,-65,-61,-59,-68,-71,-70,-73,-72,-74,-69,]),'TO':([196,],[201,]),'CONTINUE':([75,76,103,104,106,126,131,132,133,134,135,136,137,139,140,141,142,144,146,148,172,173,176,177,185,191,194,199,200,207,212,213,215,216,],[-86,-28,-27,147,-30,-21,-26,147,-16,-25,-15,-14,-24,-13,-88,-18,-17,-19,-20,-29,-87,-89,-92,-91,-90,-85,-79,-80,-78,-81,-83,-82,-77,-84,]),'ACTION':([32,40,63,71,],[39,47,-10,-11,]),'ELSEIF':([75,172,194,199,212,216,],[-86,-87,198,205,-83,-84,]),':':([2,5,7,12,18,39,47,59,60,66,68,69,70,77,79,80,81,82,83,87,88,89,90,91,93,94,95,96,98,99,101,102,110,111,114,128,149,150,151,153,155,156,158,160,162,163,166,167,168,169,171,174,175,179,181,182,183,184,190,192,197,203,204,206,210,],[6,9,11,17,25,45,52,65,67,74,-32,-33,78,105,-64,-37,-41,-60,-67,-51,-63,-55,-35,-58,-62,-40,-48,-66,-34,-65,-61,-31,-56,-57,-59,-39,-49,-50,-68,-71,-38,-70,-73,-43,-42,-44,-52,-54,-53,-36,186,188,189,-72,-74,-45,-46,-47,-69,195,202,208,209,211,214,]),'=':([45,52,65,79,81,82,83,87,88,89,91,93,94,95,96,99,101,110,111,114,119,121,122,149,150,151,153,156,158,160,162,163,166,167,168,179,181,182,183,184,188,190,],[51,57,72,-64,-41,-60,-67,-51,-63,-55,-58,-62,120,-48,-66,-65,-61,-56,-57,-59,161,164,165,-49,-50,-68,-71,-70,-73,-43,-42,-44,-52,-54,-53,-72,-74,-45,-46,-47,193,-69,]),'<':([79,81,82,83,87,88,89,91,93,94,95,96,99,101,110,111,114,149,150,151,153,156,158,160,162,163,166,167,168,179,181,182,183,184,190,],[-64,-41,-60,-67,-51,-63,-55,-58,-62,121,-48,-66,-65,-61,-56,-57,-59,-49,-50,-68,-71,-70,-73,-43,-42,-44,-52,-54,-53,-72,-74,-45,-46,-47,-69,]),'$end':([3,19,61,],[0,-1,-12,]),'FUNCTION':([13,46,],[18,-9,]),'STRING':([15,22,27,35,36,43,72,84,85,86,92,100,107,108,113,115,118,119,120,121,123,124,125,127,129,130,143,152,157,161,164,165,187,198,205,],[21,30,-4,-3,-5,-6,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'FOR':([75,76,103,104,106,126,131,132,133,134,135,136,137,139,140,141,142,144,146,148,172,173,176,177,185,191,194,199,200,207,212,213,215,216,],[-86,-28,-27,138,-30,-21,-26,138,-16,-25,-15,-14,-24,-13,-88,-18,-17,-19,-20,-29,-87,-89,-92,-91,-90,-85,-79,-80,-78,-81,-83,-82,-77,-84,]),'ELSE':([75,172,194,199,212,216,],[-86,-87,197,204,-83,-84,]),'PLAYER':([4,50,],[7,-7,]),'IN':([174,],[187,]),'[':([72,79,82,83,84,85,86,88,89,91,92,93,96,99,100,101,107,108,113,114,115,118,119,120,121,123,124,125,127,129,130,143,151,152,153,156,157,158,161,164,165,179,181,187,190,198,205,],[92,-64,-60,-67,92,92,92,-63,113,-58,92,-62,-66,-65,92,-61,92,92,92,-59,92,92,92,92,92,92,92,92,92,92,92,92,-68,92,-71,-70,92,-73,92,92,92,-72,-74,92,-69,92,92,]),'PIECE':([0,],[2,]),']':([79,80,81,82,83,87,88,89,90,91,93,94,95,96,98,99,101,110,111,114,116,117,128,149,150,151,153,154,155,156,158,160,162,163,166,167,168,169,179,180,181,182,183,184,190,],[-64,-37,-41,-60,-67,-51,-63,-55,-35,-58,-62,-40,-48,-66,-34,-65,-61,-56,-57,-59,156,-75,-39,-49,-50,-68,-71,179,-38,-70,-73,-43,-42,-44,-52,-54,-53,-36,-72,-76,-74,-45,-46,-47,-69,]),'ID':([51,53,54,57,60,62,70,72,73,75,76,84,85,86,92,100,103,104,106,107,108,112,113,115,118,119,120,121,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,148,152,157,161,164,165,172,173,176,177,185,187,191,194,198,199,200,205,207,212,213,215,216,],[56,59,60,64,69,70,69,93,69,-86,-28,93,93,93,93,93,-27,59,-30,93,93,153,93,93,93,93,93,93,93,93,93,-21,93,93,93,-26,59,-16,-25,-15,-14,-24,174,-13,-88,-18,-17,93,-19,-20,-29,93,93,93,93,93,-87,-89,-92,-91,-90,93,-85,-79,93,-80,-78,93,-81,-83,-82,-77,-84,]),'IF':([75,76,103,104,106,126,131,132,133,134,135,136,137,139,140,141,142,144,146,148,172,173,176,177,185,191,194,199,200,207,212,213,215,216,],[-86,-28,-27,143,-30,-21,-26,143,-16,-25,-15,-14,-24,-13,-88,-18,-17,-19,-20,-29,-87,-89,-92,-91,-90,-85,-79,-80,-78,-81,-83,-82,-77,-84,]),'AND':([79,80,81,82,83,87,88,89,90,91,93,94,95,96,99,101,110,111,114,128,149,150,151,153,155,156,158,160,162,163,166,167,168,169,179,181,182,183,184,190,],[-64,-37,-41,-60,-67,-51,-63,-55,115,-58,-62,-40,-48,-66,-65,-61,-56,-57,-59,-39,-49,-50,-68,-71,-38,-70,-73,-43,-42,-44,-52,-54,-53,115,-72,-74,-45,-46,-47,-69,]),'INDENT':([10,14,16,24,33,75,],[15,20,23,32,41,104,]),'NIL':([72,84,85,86,92,100,107,108,113,115,118,119,120,121,123,124,125,127,129,130,143,152,157,161,164,165,187,198,205,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'BREAK':([75,76,103,104,106,126,131,132,133,134,135,136,137,139,140,141,142,144,146,148,172,173,176,177,185,191,194,199,200,207,212,213,215,216,],[-86,-28,-27,145,-30,-21,-26,145,-16,-25,-15,-14,-24,-13,-88,-18,-17,-19,-20,-29,-87,-89,-92,-91,-90,-85,-79,-80,-78,-81,-83,-82,-77,-84,]),'BOOLEAN':([72,84,85,86,92,100,107,108,113,115,118,119,120,121,123,124,125,127,129,130,143,152,157,161,164,165,187,198,205,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'NOT':([72,84,92,100,113,115,118,127,129,130,143,152,157,187,198,205,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'>':([79,81,82,83,87,88,89,91,93,94,95,96,99,101,110,111,114,149,150,151,153,156,158,160,162,163,166,167,168,179,181,182,183,184,190,],[-64,-41,-60,-67,-51,-63,-55,-58,-62,119,-48,-66,-65,-61,-56,-57,-59,-49,-50,-68,-71,-70,-73,-43,-42,-44,-52,-54,-53,-72,-74,-45,-46,-47,-69,]),'OR':([79,80,81,82,83,87,88,89,90,91,93,94,95,96,98,99,101,110,111,114,128,149,150,151,153,155,156,158,160,162,163,166,167,168,169,179,181,182,183,184,190,],[-64,-37,-41,-60,-67,-51,-63,-55,-35,-58,-62,-40,-48,-66,127,-65,-61,-56,-57,-59,-39,-49,-50,-68,-71,-38,-70,-73,-43,-42,-44,-52,-54,-53,-36,-72,-74,-45,-46,-47,-69,]),'~':([79,81,82,83,87,88,89,91,93,94,95,96,99,101,110,111,114,149,150,151,153,156,158,160,162,163,166,167,168,179,181,182,183,184,190,],[-64,-41,-60,-67,-51,-63,-55,-58,-62,122,-48,-66,-65,-61,-56,-57,-59,-49,-50,-68,-71,-70,-73,-43,-42,-44,-52,-54,-53,-72,-74,-45,-46,-47,-69,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'action_stmt':([32,],[40,]),'return_stmt':([104,132,],[131,131,]),'not_test':([72,84,92,100,113,115,118,127,129,130,143,152,157,187,198,205,],[80,80,80,128,80,155,80,80,80,80,80,80,80,80,80,80,]),'operand':([72,84,92,100,113,115,118,119,120,121,127,129,130,143,152,157,161,164,165,187,198,205,],[81,81,81,81,81,81,81,160,162,163,81,81,81,81,81,81,182,183,184,81,81,81,]),'array':([72,84,85,86,92,100,107,108,113,115,118,119,120,121,123,124,125,127,129,130,143,152,157,161,164,165,187,198,205,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'input_stmt':([0,],[3,]),'flow_stmt':([104,132,],[133,133,]),'parameters':([60,70,],[66,77,]),'continue_stmt':([104,132,],[134,134,]),'assign_stmt':([53,104,132,],[58,135,135,]),'elseif_stmt':([194,],[199,]),'factor':([72,84,85,86,92,100,107,108,113,115,118,119,120,121,123,124,125,127,129,130,143,152,157,161,164,165,187,198,205,],[87,87,110,111,87,87,87,87,87,87,87,87,87,87,166,167,168,87,87,87,87,87,87,87,87,87,87,87,87,]),'suite':([67,74,78,105,186,189,195,202,208,209,211,214,],[76,103,106,148,191,194,200,207,212,213,215,216,]),'suite_stmt':([104,],[132,]),'parameter':([60,70,73,],[68,68,102,]),'compound_stmt':([104,132,],[136,136,]),'empty':([41,],[48,]),'break_stmt':([104,132,],[137,137,]),'function_stmt':([13,],[19,]),'power':([72,84,85,86,92,100,107,108,113,115,118,119,120,121,123,124,125,127,129,130,143,152,157,161,164,165,187,198,205,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'simple_stmt':([104,132,],[139,139,]),'board_stmt':([1,],[4,]),'and_test':([72,84,92,113,118,127,129,130,143,152,157,187,198,205,],[90,90,90,90,90,169,90,90,90,90,90,90,90,90,]),'for_stmt':([104,132,],[141,141,]),'player_stmt':([4,],[8,]),'stmt':([104,132,],[140,173,]),'atom':([72,84,85,86,92,100,107,108,113,115,118,119,120,121,123,124,125,127,129,130,143,152,157,161,164,165,187,198,205,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'funcdef':([49,104,132,],[55,142,142,]),'piece_stmt':([0,],[1,]),'trailer':([89,],[114,]),'rule_stmt':([8,],[13,]),'func_expr':([72,84,85,86,92,100,107,108,113,115,118,119,120,121,123,124,125,127,129,130,143,152,157,161,164,165,187,198,205,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'comparison':([72,84,92,100,113,115,118,127,129,130,143,152,157,187,198,205,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'term':([72,84,92,100,107,108,113,115,118,119,120,121,127,129,130,143,152,157,161,164,165,187,198,205,],[95,95,95,95,149,150,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'if_stmt':([104,132,],[144,144,]),'parameter_list':([92,118,],[116,159,]),'expr':([72,84,92,113,118,129,130,143,152,157,187,198,205,],[97,109,117,154,117,170,171,175,178,180,192,203,210,]),'or_test':([72,84,92,113,118,129,130,143,152,157,187,198,205,],[98,98,98,98,98,98,98,98,98,98,98,98,98,]),'while_stmt':([104,132,],[146,146,]),'piece_expr':([15,],[22,]),'position':([72,84,85,86,92,100,107,108,113,115,118,119,120,121,123,124,125,127,129,130,143,152,157,161,164,165,187,198,205,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'global_assign_stmt':([41,],[49,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> input_stmt","S'",1,None,None,None),
  ('input_stmt -> piece_stmt board_stmt player_stmt rule_stmt function_stmt','input_stmt',5,'p_input_stmt','yaccing.py',48),
  ('piece_stmt -> PIECE : NEWLINE INDENT piece_expr DEDENT','piece_stmt',6,'p_piece_stmt','yaccing.py',52),
  ('piece_expr -> STRING NUMBER NEWLINE','piece_expr',3,'p_piece_expr','yaccing.py',56),
  ('piece_expr -> STRING NEWLINE','piece_expr',2,'p_piece_expr','yaccing.py',57),
  ('piece_expr -> piece_expr STRING NEWLINE','piece_expr',3,'p_piece_expr','yaccing.py',58),
  ('piece_expr -> piece_expr STRING NUMBER NEWLINE','piece_expr',4,'p_piece_expr','yaccing.py',59),
  ('board_stmt -> BOARD : NEWLINE INDENT NUMBER NUMBER NEWLINE DEDENT','board_stmt',8,'p_board_stmt','yaccing.py',71),
  ('player_stmt -> PLAYER : NEWLINE INDENT NUMBER NEWLINE DEDENT','player_stmt',7,'p_player_stmt','yaccing.py',75),
  ('rule_stmt -> RULE : NEWLINE INDENT action_stmt DEDENT','rule_stmt',6,'p_rule_stmt','yaccing.py',79),
  ('action_stmt -> ACTION : = ID NEWLINE','action_stmt',5,'p_action_stmt','yaccing.py',83),
  ('action_stmt -> action_stmt ACTION : = ID NEWLINE','action_stmt',6,'p_action_stmt','yaccing.py',84),
  ('function_stmt -> FUNCTION : NEWLINE INDENT global_assign_stmt funcdef DEDENT','function_stmt',7,'p_function_stmt','yaccing.py',91),
  ('stmt -> simple_stmt','stmt',1,'p_stmt','yaccing.py',95),
  ('stmt -> compound_stmt','stmt',1,'p_stmt','yaccing.py',96),
  ('simple_stmt -> assign_stmt','simple_stmt',1,'p_simple_stmt','yaccing.py',100),
  ('simple_stmt -> flow_stmt','simple_stmt',1,'p_simple_stmt','yaccing.py',101),
  ('compound_stmt -> funcdef','compound_stmt',1,'p_compound_stmt','yaccing.py',105),
  ('compound_stmt -> for_stmt','compound_stmt',1,'p_compound_stmt','yaccing.py',106),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','yaccing.py',107),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','yaccing.py',108),
  ('assign_stmt -> ID : = expr NEWLINE','assign_stmt',5,'p_assign_stmt','yaccing.py',112),
  ('global_assign_stmt -> global_assign_stmt GLOBAL assign_stmt','global_assign_stmt',3,'p_global_assign_stmt','yaccing.py',116),
  ('global_assign_stmt -> empty','global_assign_stmt',1,'p_global_assign_stmt','yaccing.py',117),
  ('flow_stmt -> break_stmt','flow_stmt',1,'p_flow_stmt','yaccing.py',124),
  ('flow_stmt -> continue_stmt','flow_stmt',1,'p_flow_stmt','yaccing.py',125),
  ('flow_stmt -> return_stmt','flow_stmt',1,'p_flow_stmt','yaccing.py',126),
  ('funcdef -> DEF ID parameters : suite','funcdef',5,'p_funcdef','yaccing.py',130),
  ('funcdef -> DEF ID : suite','funcdef',4,'p_funcdef','yaccing.py',131),
  ('funcdef -> funcdef DEF ID parameters : suite','funcdef',6,'p_funcdef','yaccing.py',132),
  ('funcdef -> funcdef DEF ID : suite','funcdef',5,'p_funcdef','yaccing.py',133),
  ('parameters -> parameters , parameter','parameters',3,'p_parameters','yaccing.py',146),
  ('parameters -> parameter','parameters',1,'p_parameters','yaccing.py',147),
  ('parameter -> ID','parameter',1,'p_parameter','yaccing.py',154),
  ('expr -> or_test','expr',1,'p_expr','yaccing.py',161),
  ('or_test -> and_test','or_test',1,'p_or_test','yaccing.py',165),
  ('or_test -> or_test OR and_test','or_test',3,'p_or_test','yaccing.py',166),
  ('and_test -> not_test','and_test',1,'p_and_test','yaccing.py',173),
  ('and_test -> and_test AND not_test','and_test',3,'p_and_test','yaccing.py',174),
  ('not_test -> NOT not_test','not_test',2,'p_not_test','yaccing.py',181),
  ('not_test -> comparison','not_test',1,'p_not_test','yaccing.py',182),
  ('comparison -> operand','comparison',1,'p_comparison','yaccing.py',189),
  ('comparison -> comparison = operand','comparison',3,'p_comparison','yaccing.py',190),
  ('comparison -> comparison > operand','comparison',3,'p_comparison','yaccing.py',191),
  ('comparison -> comparison < operand','comparison',3,'p_comparison','yaccing.py',192),
  ('comparison -> comparison > = operand','comparison',4,'p_comparison','yaccing.py',193),
  ('comparison -> comparison < = operand','comparison',4,'p_comparison','yaccing.py',194),
  ('comparison -> comparison ~ = operand','comparison',4,'p_comparison','yaccing.py',195),
  ('operand -> term','operand',1,'p_operand','yaccing.py',204),
  ('operand -> operand + term','operand',3,'p_operand','yaccing.py',205),
  ('operand -> operand - term','operand',3,'p_operand','yaccing.py',206),
  ('term -> factor','term',1,'p_term','yaccing.py',213),
  ('term -> term * factor','term',3,'p_term','yaccing.py',214),
  ('term -> term / factor','term',3,'p_term','yaccing.py',215),
  ('term -> term % factor','term',3,'p_term','yaccing.py',216),
  ('factor -> power','factor',1,'p_factor','yaccing.py',223),
  ('factor -> + factor','factor',2,'p_factor','yaccing.py',224),
  ('factor -> - factor','factor',2,'p_factor','yaccing.py',225),
  ('power -> atom','power',1,'p_power','yaccing.py',234),
  ('power -> power trailer','power',2,'p_power','yaccing.py',235),
  ('atom -> array','atom',1,'p_atom','yaccing.py',242),
  ('atom -> position','atom',1,'p_atom','yaccing.py',243),
  ('atom -> ID','atom',1,'p_atom','yaccing.py',244),
  ('atom -> STRING','atom',1,'p_atom','yaccing.py',245),
  ('atom -> NUMBER','atom',1,'p_atom','yaccing.py',246),
  ('atom -> BOOLEAN','atom',1,'p_atom','yaccing.py',247),
  ('atom -> NIL','atom',1,'p_atom','yaccing.py',248),
  ('atom -> func_expr','atom',1,'p_atom','yaccing.py',249),
  ('atom -> ( expr )','atom',3,'p_atom','yaccing.py',250),
  ('position -> ( expr , expr )','position',5,'p_position','yaccing.py',262),
  ('array -> [ parameter_list ]','array',3,'p_array','yaccing.py',266),
  ('trailer -> . ID','trailer',2,'p_trailer','yaccing.py',270),
  ('trailer -> [ expr ]','trailer',3,'p_trailer','yaccing.py',271),
  ('func_expr -> ID ( )','func_expr',3,'p_func_expr','yaccing.py',278),
  ('func_expr -> ID ( parameter_list )','func_expr',4,'p_func_expr','yaccing.py',279),
  ('parameter_list -> expr','parameter_list',1,'p_parameter_list','yaccing.py',286),
  ('parameter_list -> parameter_list , expr','parameter_list',3,'p_parameter_list','yaccing.py',287),
  ('for_stmt -> FOR ID : = NUMBER TO NUMBER : suite','for_stmt',9,'p_for_stmt','yaccing.py',294),
  ('for_stmt -> FOR ID IN expr : suite','for_stmt',6,'p_for_stmt','yaccing.py',295),
  ('if_stmt -> IF expr : suite','if_stmt',4,'p_if_stmt','yaccing.py',302),
  ('if_stmt -> IF expr : suite elseif_stmt','if_stmt',5,'p_if_stmt','yaccing.py',303),
  ('if_stmt -> IF expr : suite ELSE : suite','if_stmt',7,'p_if_stmt','yaccing.py',304),
  ('if_stmt -> IF expr : suite elseif_stmt ELSE : suite','if_stmt',8,'p_if_stmt','yaccing.py',305),
  ('elseif_stmt -> ELSEIF expr : suite','elseif_stmt',4,'p_elseif_stmt','yaccing.py',317),
  ('elseif_stmt -> elseif_stmt ELSEIF expr : suite','elseif_stmt',5,'p_elseif_stmt','yaccing.py',318),
  ('while_stmt -> WHILE expr : suite','while_stmt',4,'p_while_stmt','yaccing.py',325),
  ('suite -> NEWLINE','suite',1,'p_suite','yaccing.py',329),
  ('suite -> NEWLINE INDENT suite_stmt DEDENT','suite',4,'p_suite','yaccing.py',330),
  ('suite_stmt -> stmt','suite_stmt',1,'p_suite_stmt','yaccing.py',337),
  ('suite_stmt -> suite_stmt stmt','suite_stmt',2,'p_suite_stmt','yaccing.py',338),
  ('return_stmt -> RETURN expr NEWLINE','return_stmt',3,'p_return_stmt','yaccing.py',346),
  ('continue_stmt -> CONTINUE NEWLINE','continue_stmt',2,'p_continue_stmt','yaccing.py',351),
  ('break_stmt -> BREAK NEWLINE','break_stmt',2,'p_break_stmt','yaccing.py',355),
  ('empty -> <empty>','empty',0,'p_empty','yaccing.py',359),
]
