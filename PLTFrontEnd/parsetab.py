
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'k\xba;\xcaT\xdeO\x92\xc5\x87\x9c\xdd~\xe1i\xc3'
    
_lr_action_items = {'DEDENT':([24,31,40,41,43,45,48,49,60,111,139,142,143,154,157,161,162,163,164,165,166,167,169,170,171,172,175,177,179,182,183,187,188,189,195,199,202,205,206,213,218,219,221,222,],[33,-4,-3,-5,50,52,56,-6,87,-10,-11,-87,-29,-28,-31,-27,182,-17,-26,-16,-15,-25,-14,-89,-19,-18,-20,-21,-30,-88,-90,-93,-92,-91,-86,-80,-22,-81,-79,-82,-84,-83,-78,-85,]),'*':([61,64,65,69,70,71,73,75,77,78,81,83,92,93,96,118,119,120,122,125,127,135,136,137,147,149,158,],[-65,-61,-68,-52,-64,-56,-59,-63,105,-67,-66,-62,-57,-58,-60,105,105,-69,-72,-71,-74,-53,-55,-54,-73,-75,-70,]),'RETURN':([142,143,154,155,157,161,162,163,164,165,166,167,169,170,171,172,175,177,179,182,183,187,188,189,195,199,202,205,206,213,218,219,221,222,],[-87,-29,-28,159,-31,-27,159,-17,-26,-16,-15,-25,-14,-89,-19,-18,-20,-21,-30,-88,-90,-93,-92,-91,-86,-80,-22,-81,-79,-82,-84,-83,-78,-85,]),'GLOBAL':([13,20,21,46,52,54,108,],[-94,-24,29,-94,-9,29,-23,]),'NUMBER':([22,23,25,30,34,55,66,67,68,74,82,89,90,95,97,100,101,102,103,105,106,107,109,121,126,130,133,134,159,160,174,191,193,197,204,207,211,],[30,32,35,39,42,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,201,61,212,61,]),'WHILE':([142,143,154,155,157,161,162,163,164,165,166,167,169,170,171,172,175,177,179,182,183,187,188,189,195,199,202,205,206,213,218,219,221,222,],[-87,-29,-28,160,-31,-27,160,-17,-26,-16,-15,-25,-14,-89,-19,-18,-20,-21,-30,-88,-90,-93,-92,-91,-86,-80,-22,-81,-79,-82,-84,-83,-78,-85,]),'BOARD':([1,33,],[5,-2,]),'DEF':([20,46,54,60,108,142,143,154,155,157,161,162,163,164,165,166,167,169,170,171,172,175,177,179,182,183,187,188,189,195,199,202,205,206,213,218,219,221,222,],[-24,-94,59,88,-23,-87,-29,-28,59,-31,-27,59,-17,-26,-16,-15,-25,-14,-89,-19,88,-20,-21,-30,-88,-90,-93,-92,-91,-86,-80,-22,-81,-79,-82,-84,-83,-78,-85,]),'/':([61,64,65,69,70,71,73,75,77,78,81,83,92,93,96,118,119,120,122,125,127,135,136,137,147,149,158,],[-65,-61,-68,-52,-64,-56,-59,-63,107,-67,-66,-62,-57,-58,-60,107,107,-69,-72,-71,-74,-53,-55,-54,-73,-75,-70,]),'%':([61,64,65,69,70,71,73,75,77,78,81,83,92,93,96,118,119,120,122,125,127,135,136,137,147,149,158,],[-65,-61,-68,-52,-64,-56,-59,-63,106,-67,-66,-62,-57,-58,-60,106,106,-69,-72,-71,-74,-53,-55,-54,-73,-75,-70,]),')':([61,62,63,64,65,69,70,71,72,73,75,76,77,78,80,81,83,91,92,93,96,99,100,110,118,119,120,122,124,125,127,128,129,131,132,135,136,137,138,146,147,148,149,150,151,152,158,],[-65,-38,-42,-61,-68,-52,-64,-56,-36,-59,-63,-41,-49,-67,-35,-66,-62,120,-57,-58,-60,-76,127,-40,-50,-51,-69,-72,-39,-71,-74,149,-44,-43,-45,-53,-55,-54,-37,158,-73,-77,-75,-46,-47,-48,-70,]),'(':([55,66,67,68,74,75,82,89,90,95,97,100,101,102,103,105,106,107,109,121,126,130,133,134,159,160,174,191,193,204,211,],[66,66,66,66,66,100,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'+':([55,61,63,64,65,66,67,68,69,70,71,73,74,75,77,78,81,82,83,89,90,92,93,95,96,97,100,101,102,103,105,106,107,109,118,119,120,121,122,125,126,127,129,130,131,132,133,134,135,136,137,147,149,150,151,152,158,159,160,174,191,193,204,211,],[67,-65,89,-61,-68,67,67,67,-52,-64,-56,-59,67,-63,-49,-67,-66,67,-62,67,67,-57,-58,67,-60,67,67,67,67,67,67,67,67,67,-50,-51,-69,67,-72,-71,67,-74,89,67,89,89,67,67,-53,-55,-54,-73,-75,89,89,89,-70,67,67,67,67,67,67,67,]),'NEWLINE':([6,9,11,17,23,27,32,34,35,39,42,61,62,63,64,65,69,70,71,72,73,75,76,77,78,79,80,81,83,84,92,93,96,110,112,114,118,119,120,122,124,125,127,129,131,132,135,136,137,138,141,145,147,149,150,151,152,156,158,176,178,180,190,194,198,200,208,214,215,217,220,],[10,14,16,26,31,37,40,41,43,48,49,-65,-38,-42,-61,-68,-52,-64,-56,-36,-59,-63,-41,-49,-67,108,-35,-66,-62,111,-57,-58,-60,-40,139,142,-50,-51,-69,-72,-39,-71,-74,-44,-43,-45,-53,-55,-54,-37,142,142,-73,-75,-46,-47,-48,142,-70,187,188,189,142,142,202,142,142,142,142,142,142,]),'-':([55,61,63,64,65,66,67,68,69,70,71,73,74,75,77,78,81,82,83,89,90,92,93,95,96,97,100,101,102,103,105,106,107,109,118,119,120,121,122,125,126,127,129,130,131,132,133,134,135,136,137,147,149,150,151,152,158,159,160,174,191,193,204,211,],[68,-65,90,-61,-68,68,68,68,-52,-64,-56,-59,68,-63,-49,-67,-66,68,-62,68,68,-57,-58,68,-60,68,68,68,68,68,68,68,68,68,-50,-51,-69,68,-72,-71,68,-74,90,68,90,90,68,68,-53,-55,-54,-73,-75,90,90,90,-70,68,68,68,68,68,68,68,]),',':([61,62,63,64,65,69,70,71,72,73,75,76,77,78,80,81,83,91,92,93,96,98,99,110,113,115,116,118,119,120,122,124,125,127,128,129,131,132,135,136,137,138,144,147,148,149,150,151,152,153,158,],[-65,-38,-42,-61,-68,-52,-64,-56,-36,-59,-63,-41,-49,-67,-35,-66,-62,121,-57,-58,-60,126,-76,-40,140,-33,-34,-50,-51,-69,-72,-39,-71,-74,126,-44,-43,-45,-53,-55,-54,-37,140,-73,-77,-75,-46,-47,-48,-32,-70,]),'RULE':([8,50,],[12,-8,]),'.':([61,64,65,70,71,73,75,78,81,83,96,120,122,125,127,147,149,158,],[-65,-61,-68,-64,94,-59,-63,-67,-66,-62,-60,-69,-72,-71,-74,-73,-75,-70,]),'TO':([201,],[207,]),'CONTINUE':([142,143,154,155,157,161,162,163,164,165,166,167,169,170,171,172,175,177,179,182,183,187,188,189,195,199,202,205,206,213,218,219,221,222,],[-87,-29,-28,178,-31,-27,178,-17,-26,-16,-15,-25,-14,-89,-19,-18,-20,-21,-30,-88,-90,-93,-92,-91,-86,-80,-22,-81,-79,-82,-84,-83,-78,-85,]),'ACTION':([36,45,111,139,],[44,53,-10,-11,]),'ELSEIF':([142,182,199,205,218,222,],[-87,-88,204,211,-84,-85,]),':':([2,5,7,12,18,38,44,53,61,62,63,64,65,69,70,71,72,73,75,76,77,78,80,81,83,86,92,93,96,110,113,115,116,117,118,119,120,122,124,125,127,129,131,132,135,136,137,138,144,147,149,150,151,152,153,158,173,181,184,186,196,203,209,210,212,216,],[6,9,11,17,27,47,51,58,-65,-38,-42,-61,-68,-52,-64,-56,-36,-59,-63,-41,-49,-67,-35,-66,-62,114,-57,-58,-60,-40,141,-33,-34,145,-50,-51,-69,-72,-39,-71,-74,-44,-43,-45,-53,-55,-54,-37,156,-73,-75,-46,-47,-48,-32,-70,185,190,192,194,200,208,214,215,217,220,]),'=':([47,51,58,61,63,64,65,69,70,71,73,75,76,77,78,81,83,92,93,96,101,103,104,118,119,120,122,125,127,129,131,132,135,136,137,147,149,150,151,152,158,185,192,],[55,57,85,-65,-42,-61,-68,-52,-64,-56,-59,-63,102,-49,-67,-66,-62,-57,-58,-60,130,133,134,-50,-51,-69,-72,-71,-74,-44,-43,-45,-53,-55,-54,-73,-75,-46,-47,-48,-70,193,197,]),'<':([61,63,64,65,69,70,71,73,75,76,77,78,81,83,92,93,96,118,119,120,122,125,127,129,131,132,135,136,137,147,149,150,151,152,158,],[-65,-42,-61,-68,-52,-64,-56,-59,-63,103,-49,-67,-66,-62,-57,-58,-60,-50,-51,-69,-72,-71,-74,-44,-43,-45,-53,-55,-54,-73,-75,-46,-47,-48,-70,]),'$end':([3,19,28,87,],[0,-1,-12,-13,]),'FUNCTION':([13,20,21,52,108,],[18,-24,18,-9,-23,]),'STRING':([15,24,31,40,41,49,55,66,67,68,74,82,89,90,95,97,100,101,102,103,105,106,107,109,121,126,130,133,134,159,160,174,191,193,204,211,],[23,34,-4,-3,-5,-6,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'FOR':([142,143,154,155,157,161,162,163,164,165,166,167,169,170,171,172,175,177,179,182,183,187,188,189,195,199,202,205,206,213,218,219,221,222,],[-87,-29,-28,168,-31,-27,168,-17,-26,-16,-15,-25,-14,-89,-19,-18,-20,-21,-30,-88,-90,-93,-92,-91,-86,-80,-22,-81,-79,-82,-84,-83,-78,-85,]),'ELSE':([142,182,199,205,218,222,],[-87,-88,203,210,-84,-85,]),'PLAYER':([4,56,],[7,-7,]),'IN':([184,],[191,]),'[':([55,61,64,65,66,67,68,70,71,73,74,75,78,81,82,83,89,90,95,96,97,100,101,102,103,105,106,107,109,120,121,122,125,126,127,130,133,134,147,149,158,159,160,174,191,193,204,211,],[74,-65,-61,-68,74,74,74,-64,95,-59,74,-63,-67,-66,74,-62,74,74,74,-60,74,74,74,74,74,74,74,74,74,-69,74,-72,-71,74,-74,74,74,74,-73,-75,-70,74,74,74,74,74,74,74,]),'PIECE':([0,],[2,]),']':([61,62,63,64,65,69,70,71,72,73,75,76,77,78,80,81,83,92,93,96,98,99,110,118,119,120,122,123,124,125,127,129,131,132,135,136,137,138,147,148,149,150,151,152,158,],[-65,-38,-42,-61,-68,-52,-64,-56,-36,-59,-63,-41,-49,-67,-35,-66,-62,-57,-58,-60,125,-76,-40,-50,-51,-69,-72,147,-39,-71,-74,-44,-43,-45,-53,-55,-54,-37,-73,-77,-75,-46,-47,-48,-70,]),'ID':([29,55,57,59,66,67,68,74,82,85,86,88,89,90,94,95,97,100,101,102,103,105,106,107,109,117,121,126,130,133,134,140,142,143,154,155,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,177,179,182,183,187,188,189,191,193,195,199,202,204,205,206,211,213,218,219,221,222,],[38,75,84,86,75,75,75,75,75,112,116,117,75,75,122,75,75,75,75,75,75,75,75,75,75,116,75,75,75,75,75,116,-87,-29,-28,173,-31,75,75,-27,173,-17,-26,-16,-15,-25,184,-14,-89,-19,-18,75,-20,-21,-30,-88,-90,-93,-92,-91,75,75,-86,-80,-22,75,-81,-79,75,-82,-84,-83,-78,-85,]),'IF':([142,143,154,155,157,161,162,163,164,165,166,167,169,170,171,172,175,177,179,182,183,187,188,189,195,199,202,205,206,213,218,219,221,222,],[-87,-29,-28,174,-31,-27,174,-17,-26,-16,-15,-25,-14,-89,-19,-18,-20,-21,-30,-88,-90,-93,-92,-91,-86,-80,-22,-81,-79,-82,-84,-83,-78,-85,]),'AND':([61,62,63,64,65,69,70,71,72,73,75,76,77,78,81,83,92,93,96,110,118,119,120,122,124,125,127,129,131,132,135,136,137,138,147,149,150,151,152,158,],[-65,-38,-42,-61,-68,-52,-64,-56,97,-59,-63,-41,-49,-67,-66,-62,-57,-58,-60,-40,-50,-51,-69,-72,-39,-71,-74,-44,-43,-45,-53,-55,-54,97,-73,-75,-46,-47,-48,-70,]),'INDENT':([10,14,16,26,37,142,],[15,22,25,36,46,155,]),'NIL':([55,66,67,68,74,82,89,90,95,97,100,101,102,103,105,106,107,109,121,126,130,133,134,159,160,174,191,193,204,211,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'BREAK':([142,143,154,155,157,161,162,163,164,165,166,167,169,170,171,172,175,177,179,182,183,187,188,189,195,199,202,205,206,213,218,219,221,222,],[-87,-29,-28,176,-31,-27,176,-17,-26,-16,-15,-25,-14,-89,-19,-18,-20,-21,-30,-88,-90,-93,-92,-91,-86,-80,-22,-81,-79,-82,-84,-83,-78,-85,]),'BOOLEAN':([55,66,67,68,74,82,89,90,95,97,100,101,102,103,105,106,107,109,121,126,130,133,134,159,160,174,191,193,204,211,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'NOT':([55,66,74,82,95,97,100,109,121,126,159,160,174,191,193,204,211,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'>':([61,63,64,65,69,70,71,73,75,76,77,78,81,83,92,93,96,118,119,120,122,125,127,129,131,132,135,136,137,147,149,150,151,152,158,],[-65,-42,-61,-68,-52,-64,-56,-59,-63,101,-49,-67,-66,-62,-57,-58,-60,-50,-51,-69,-72,-71,-74,-44,-43,-45,-53,-55,-54,-73,-75,-46,-47,-48,-70,]),'OR':([61,62,63,64,65,69,70,71,72,73,75,76,77,78,80,81,83,92,93,96,110,118,119,120,122,124,125,127,129,131,132,135,136,137,138,147,149,150,151,152,158,],[-65,-38,-42,-61,-68,-52,-64,-56,-36,-59,-63,-41,-49,-67,109,-66,-62,-57,-58,-60,-40,-50,-51,-69,-72,-39,-71,-74,-44,-43,-45,-53,-55,-54,-37,-73,-75,-46,-47,-48,-70,]),'~':([61,63,64,65,69,70,71,73,75,76,77,78,81,83,92,93,96,118,119,120,122,125,127,129,131,132,135,136,137,147,149,150,151,152,158,],[-65,-42,-61,-68,-52,-64,-56,-59,-63,104,-49,-67,-66,-62,-57,-58,-60,-50,-51,-69,-72,-71,-74,-44,-43,-45,-53,-55,-54,-73,-75,-46,-47,-48,-70,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'action_stmt':([36,],[45,]),'return_stmt':([155,162,],[161,161,]),'not_test':([55,66,74,82,95,97,100,109,121,126,159,160,174,191,193,204,211,],[62,62,62,110,62,124,62,62,62,62,62,62,62,62,62,62,62,]),'operand':([55,66,74,82,95,97,100,101,102,103,109,121,126,130,133,134,159,160,174,191,193,204,211,],[63,63,63,63,63,63,63,129,131,132,63,63,63,150,151,152,63,63,63,63,63,63,63,]),'array':([55,66,67,68,74,82,89,90,95,97,100,101,102,103,105,106,107,109,121,126,130,133,134,159,160,174,191,193,204,211,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'input_stmt':([0,],[3,]),'flow_stmt':([155,162,],[163,163,]),'parameters':([86,117,],[113,144,]),'continue_stmt':([155,162,],[164,164,]),'assign_stmt':([155,162,],[165,165,]),'elseif_stmt':([199,],[205,]),'factor':([55,66,67,68,74,82,89,90,95,97,100,101,102,103,105,106,107,109,121,126,130,133,134,159,160,174,191,193,204,211,],[69,69,92,93,69,69,69,69,69,69,69,69,69,69,135,136,137,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'suite':([114,141,145,156,190,194,200,208,214,215,217,220,],[143,154,157,179,195,199,206,213,218,219,221,222,]),'suite_stmt':([155,],[162,]),'parameter':([86,117,140,],[115,115,153,]),'compound_stmt':([155,162,],[166,166,]),'empty':([13,21,46,],[20,20,20,]),'break_stmt':([155,162,],[167,167,]),'function_stmt':([13,21,],[19,28,]),'power':([55,66,67,68,74,82,89,90,95,97,100,101,102,103,105,106,107,109,121,126,130,133,134,159,160,174,191,193,204,211,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'simple_stmt':([155,162,],[169,169,]),'board_stmt':([1,],[4,]),'and_test':([55,66,74,95,100,109,121,126,159,160,174,191,193,204,211,],[72,72,72,72,72,138,72,72,72,72,72,72,72,72,72,]),'for_stmt':([155,162,],[171,171,]),'player_stmt':([4,],[8,]),'stmt':([155,162,],[170,183,]),'atom':([55,66,67,68,74,82,89,90,95,97,100,101,102,103,105,106,107,109,121,126,130,133,134,159,160,174,191,193,204,211,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'funcdef':([54,155,162,],[60,172,172,]),'piece_stmt':([0,],[1,]),'trailer':([71,],[96,]),'rule_stmt':([8,],[13,]),'func_expr':([55,66,67,68,74,82,89,90,95,97,100,101,102,103,105,106,107,109,121,126,130,133,134,159,160,174,191,193,204,211,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'comparison':([55,66,74,82,95,97,100,109,121,126,159,160,174,191,193,204,211,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'term':([55,66,74,82,89,90,95,97,100,101,102,103,109,121,126,130,133,134,159,160,174,191,193,204,211,],[77,77,77,77,118,119,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'if_stmt':([155,162,],[175,175,]),'parameter_list':([74,100,],[98,128,]),'expr':([55,66,74,95,100,121,126,159,160,174,191,193,204,211,],[79,91,99,123,99,146,148,180,181,186,196,198,209,216,]),'or_test':([55,66,74,95,100,121,126,159,160,174,191,193,204,211,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'while_stmt':([155,162,],[177,177,]),'global_assign_stmt':([13,21,46,],[21,21,54,]),'position':([55,66,67,68,74,82,89,90,95,97,100,101,102,103,105,106,107,109,121,126,130,133,134,159,160,174,191,193,204,211,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'piece_expr':([15,],[24,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> input_stmt","S'",1,None,None,None),
  ('input_stmt -> piece_stmt board_stmt player_stmt rule_stmt function_stmt','input_stmt',5,'p_input_stmt','yaccing.py',48),
  ('piece_stmt -> PIECE : NEWLINE INDENT piece_expr DEDENT','piece_stmt',6,'p_piece_stmt','yaccing.py',52),
  ('piece_expr -> STRING NUMBER NEWLINE','piece_expr',3,'p_piece_expr','yaccing.py',56),
  ('piece_expr -> STRING NEWLINE','piece_expr',2,'p_piece_expr','yaccing.py',57),
  ('piece_expr -> piece_expr STRING NEWLINE','piece_expr',3,'p_piece_expr','yaccing.py',58),
  ('piece_expr -> piece_expr STRING NUMBER NEWLINE','piece_expr',4,'p_piece_expr','yaccing.py',59),
  ('board_stmt -> BOARD : NEWLINE INDENT NUMBER NUMBER NEWLINE DEDENT','board_stmt',8,'p_board_stmt','yaccing.py',71),
  ('player_stmt -> PLAYER : NEWLINE INDENT NUMBER NEWLINE DEDENT','player_stmt',7,'p_player_stmt','yaccing.py',75),
  ('rule_stmt -> RULE : NEWLINE INDENT action_stmt DEDENT','rule_stmt',6,'p_rule_stmt','yaccing.py',79),
  ('action_stmt -> ACTION : = ID NEWLINE','action_stmt',5,'p_action_stmt','yaccing.py',83),
  ('action_stmt -> action_stmt ACTION : = ID NEWLINE','action_stmt',6,'p_action_stmt','yaccing.py',84),
  ('function_stmt -> global_assign_stmt function_stmt','function_stmt',2,'p_function_stmt','yaccing.py',91),
  ('function_stmt -> FUNCTION : NEWLINE INDENT global_assign_stmt funcdef DEDENT','function_stmt',7,'p_function_stmt','yaccing.py',92),
  ('stmt -> simple_stmt','stmt',1,'p_stmt','yaccing.py',99),
  ('stmt -> compound_stmt','stmt',1,'p_stmt','yaccing.py',100),
  ('simple_stmt -> assign_stmt','simple_stmt',1,'p_simple_stmt','yaccing.py',104),
  ('simple_stmt -> flow_stmt','simple_stmt',1,'p_simple_stmt','yaccing.py',105),
  ('compound_stmt -> funcdef','compound_stmt',1,'p_compound_stmt','yaccing.py',109),
  ('compound_stmt -> for_stmt','compound_stmt',1,'p_compound_stmt','yaccing.py',110),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','yaccing.py',111),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','yaccing.py',112),
  ('assign_stmt -> ID : = expr NEWLINE','assign_stmt',5,'p_assign_stmt','yaccing.py',116),
  ('global_assign_stmt -> global_assign_stmt GLOBAL ID : = expr NEWLINE','global_assign_stmt',7,'p_global_assign_stmt','yaccing.py',120),
  ('global_assign_stmt -> empty','global_assign_stmt',1,'p_global_assign_stmt','yaccing.py',121),
  ('flow_stmt -> break_stmt','flow_stmt',1,'p_flow_stmt','yaccing.py',127),
  ('flow_stmt -> continue_stmt','flow_stmt',1,'p_flow_stmt','yaccing.py',128),
  ('flow_stmt -> return_stmt','flow_stmt',1,'p_flow_stmt','yaccing.py',129),
  ('funcdef -> DEF ID parameters : suite','funcdef',5,'p_funcdef','yaccing.py',133),
  ('funcdef -> DEF ID : suite','funcdef',4,'p_funcdef','yaccing.py',134),
  ('funcdef -> funcdef DEF ID parameters : suite','funcdef',6,'p_funcdef','yaccing.py',135),
  ('funcdef -> funcdef DEF ID : suite','funcdef',5,'p_funcdef','yaccing.py',136),
  ('parameters -> parameters , parameter','parameters',3,'p_parameters','yaccing.py',149),
  ('parameters -> parameter','parameters',1,'p_parameters','yaccing.py',150),
  ('parameter -> ID','parameter',1,'p_parameter','yaccing.py',157),
  ('expr -> or_test','expr',1,'p_expr','yaccing.py',164),
  ('or_test -> and_test','or_test',1,'p_or_test','yaccing.py',168),
  ('or_test -> or_test OR and_test','or_test',3,'p_or_test','yaccing.py',169),
  ('and_test -> not_test','and_test',1,'p_and_test','yaccing.py',176),
  ('and_test -> and_test AND not_test','and_test',3,'p_and_test','yaccing.py',177),
  ('not_test -> NOT not_test','not_test',2,'p_not_test','yaccing.py',184),
  ('not_test -> comparison','not_test',1,'p_not_test','yaccing.py',185),
  ('comparison -> operand','comparison',1,'p_comparison','yaccing.py',192),
  ('comparison -> comparison = operand','comparison',3,'p_comparison','yaccing.py',193),
  ('comparison -> comparison > operand','comparison',3,'p_comparison','yaccing.py',194),
  ('comparison -> comparison < operand','comparison',3,'p_comparison','yaccing.py',195),
  ('comparison -> comparison > = operand','comparison',4,'p_comparison','yaccing.py',196),
  ('comparison -> comparison < = operand','comparison',4,'p_comparison','yaccing.py',197),
  ('comparison -> comparison ~ = operand','comparison',4,'p_comparison','yaccing.py',198),
  ('operand -> term','operand',1,'p_operand','yaccing.py',207),
  ('operand -> operand + term','operand',3,'p_operand','yaccing.py',208),
  ('operand -> operand - term','operand',3,'p_operand','yaccing.py',209),
  ('term -> factor','term',1,'p_term','yaccing.py',216),
  ('term -> term * factor','term',3,'p_term','yaccing.py',217),
  ('term -> term / factor','term',3,'p_term','yaccing.py',218),
  ('term -> term % factor','term',3,'p_term','yaccing.py',219),
  ('factor -> power','factor',1,'p_factor','yaccing.py',226),
  ('factor -> + factor','factor',2,'p_factor','yaccing.py',227),
  ('factor -> - factor','factor',2,'p_factor','yaccing.py',228),
  ('power -> atom','power',1,'p_power','yaccing.py',237),
  ('power -> power trailer','power',2,'p_power','yaccing.py',238),
  ('atom -> array','atom',1,'p_atom','yaccing.py',245),
  ('atom -> position','atom',1,'p_atom','yaccing.py',246),
  ('atom -> ID','atom',1,'p_atom','yaccing.py',247),
  ('atom -> STRING','atom',1,'p_atom','yaccing.py',248),
  ('atom -> NUMBER','atom',1,'p_atom','yaccing.py',249),
  ('atom -> BOOLEAN','atom',1,'p_atom','yaccing.py',250),
  ('atom -> NIL','atom',1,'p_atom','yaccing.py',251),
  ('atom -> func_expr','atom',1,'p_atom','yaccing.py',252),
  ('atom -> ( expr )','atom',3,'p_atom','yaccing.py',253),
  ('position -> ( expr , expr )','position',5,'p_position','yaccing.py',265),
  ('array -> [ parameter_list ]','array',3,'p_array','yaccing.py',269),
  ('trailer -> . ID','trailer',2,'p_trailer','yaccing.py',273),
  ('trailer -> [ expr ]','trailer',3,'p_trailer','yaccing.py',274),
  ('func_expr -> ID ( )','func_expr',3,'p_func_expr','yaccing.py',281),
  ('func_expr -> ID ( parameter_list )','func_expr',4,'p_func_expr','yaccing.py',282),
  ('parameter_list -> expr','parameter_list',1,'p_parameter_list','yaccing.py',289),
  ('parameter_list -> parameter_list , expr','parameter_list',3,'p_parameter_list','yaccing.py',290),
  ('for_stmt -> FOR ID : = NUMBER TO NUMBER : suite','for_stmt',9,'p_for_stmt','yaccing.py',297),
  ('for_stmt -> FOR ID IN expr : suite','for_stmt',6,'p_for_stmt','yaccing.py',298),
  ('if_stmt -> IF expr : suite','if_stmt',4,'p_if_stmt','yaccing.py',305),
  ('if_stmt -> IF expr : suite elseif_stmt','if_stmt',5,'p_if_stmt','yaccing.py',306),
  ('if_stmt -> IF expr : suite ELSE : suite','if_stmt',7,'p_if_stmt','yaccing.py',307),
  ('if_stmt -> IF expr : suite elseif_stmt ELSE : suite','if_stmt',8,'p_if_stmt','yaccing.py',308),
  ('elseif_stmt -> ELSEIF expr : suite','elseif_stmt',4,'p_elseif_stmt','yaccing.py',320),
  ('elseif_stmt -> elseif_stmt ELSEIF expr : suite','elseif_stmt',5,'p_elseif_stmt','yaccing.py',321),
  ('while_stmt -> WHILE expr : suite','while_stmt',4,'p_while_stmt','yaccing.py',328),
  ('suite -> NEWLINE','suite',1,'p_suite','yaccing.py',332),
  ('suite -> NEWLINE INDENT suite_stmt DEDENT','suite',4,'p_suite','yaccing.py',333),
  ('suite_stmt -> stmt','suite_stmt',1,'p_suite_stmt','yaccing.py',340),
  ('suite_stmt -> suite_stmt stmt','suite_stmt',2,'p_suite_stmt','yaccing.py',341),
  ('return_stmt -> RETURN expr NEWLINE','return_stmt',3,'p_return_stmt','yaccing.py',349),
  ('continue_stmt -> CONTINUE NEWLINE','continue_stmt',2,'p_continue_stmt','yaccing.py',354),
  ('break_stmt -> BREAK NEWLINE','break_stmt',2,'p_break_stmt','yaccing.py',358),
  ('empty -> <empty>','empty',0,'p_empty','yaccing.py',362),
]
