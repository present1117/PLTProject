
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = "\x91\xd9M\xc1\x01\xf9\xf0\x10\xbb/'\x94\xf6\x92A\xe9"
    
_lr_action_items = {'DEDENT':([22,27,35,36,38,40,42,43,55,62,70,74,75,102,105,130,131,132,133,134,135,136,138,139,140,141,144,146,148,172,173,177,178,186,193,197,200,203,204,211,216,217,219,220,],[29,-4,-3,-5,44,46,50,-6,60,-10,-11,-86,-28,-27,-30,-26,172,-16,-25,-15,-14,-24,-13,-88,-18,-17,-19,-20,-29,-87,-89,-92,-91,-90,-85,-79,-21,-80,-78,-81,-83,-82,-77,-84,]),'*':([78,81,82,86,87,88,90,92,94,95,98,100,109,110,113,149,150,151,153,156,158,166,167,168,180,182,192,],[-64,-60,-67,-51,-63,-55,-58,-62,122,-66,-65,-61,-56,-57,-59,122,122,-68,-71,-70,-73,-52,-54,-53,-72,-74,-69,]),'RETURN':([74,75,102,103,105,130,131,132,133,134,135,136,138,139,140,141,144,146,148,172,173,177,178,186,193,197,200,203,204,211,216,217,219,220,],[-86,-28,-27,128,-30,-26,128,-16,-25,-15,-14,-24,-13,-88,-18,-17,-19,-20,-29,-87,-89,-92,-91,-90,-85,-79,-21,-80,-78,-81,-83,-82,-77,-84,]),'GLOBAL':([41,48,49,125,],[-93,-23,53,-22,]),'NUMBER':([20,21,23,26,30,71,83,84,85,91,99,106,107,112,114,117,118,119,120,122,123,124,126,128,129,143,152,157,161,164,165,188,190,195,202,205,209,],[26,28,31,34,37,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,199,78,210,78,]),'WHILE':([74,75,102,103,105,130,131,132,133,134,135,136,138,139,140,141,144,146,148,172,173,177,178,186,193,197,200,203,204,211,216,217,219,220,],[-86,-28,-27,129,-30,-26,129,-16,-25,-15,-14,-24,-13,-88,-18,-17,-19,-20,-29,-87,-89,-92,-91,-90,-85,-79,-21,-80,-78,-81,-83,-82,-77,-84,]),'BOARD':([1,29,],[5,-2,]),'DEF':([41,48,49,55,74,75,102,103,105,125,130,131,132,133,134,135,136,138,139,140,141,144,146,148,172,173,177,178,186,193,197,200,203,204,211,216,217,219,220,],[-93,-23,54,61,-86,-28,-27,54,-30,-22,-26,54,-16,-25,-15,-14,-24,-13,-88,-18,61,-19,-20,-29,-87,-89,-92,-91,-90,-85,-79,-21,-80,-78,-81,-83,-82,-77,-84,]),'/':([78,81,82,86,87,88,90,92,94,95,98,100,109,110,113,149,150,151,153,156,158,166,167,168,180,182,192,],[-64,-60,-67,-51,-63,-55,-58,-62,124,-66,-65,-61,-56,-57,-59,124,124,-68,-71,-70,-73,-52,-54,-53,-72,-74,-69,]),'%':([78,81,82,86,87,88,90,92,94,95,98,100,109,110,113,149,150,151,153,156,158,166,167,168,180,182,192,],[-64,-60,-67,-51,-63,-55,-58,-62,123,-66,-65,-61,-56,-57,-59,123,123,-68,-71,-70,-73,-52,-54,-53,-72,-74,-69,]),')':([78,79,80,81,82,86,87,88,89,90,92,93,94,95,97,98,100,108,109,110,113,116,117,127,149,150,151,153,155,156,158,159,160,162,163,166,167,168,169,179,180,181,182,183,184,185,192,],[-64,-37,-41,-60,-67,-51,-63,-55,-35,-58,-62,-40,-48,-66,-34,-65,-61,151,-56,-57,-59,-75,158,-39,-49,-50,-68,-71,-38,-70,-73,182,-43,-42,-44,-52,-54,-53,-36,192,-72,-76,-74,-45,-46,-47,-69,]),'(':([71,83,84,85,91,92,99,106,107,112,114,117,118,119,120,122,123,124,126,128,129,143,152,157,161,164,165,188,190,202,209,],[83,83,83,83,83,117,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'+':([71,78,80,81,82,83,84,85,86,87,88,90,91,92,94,95,98,99,100,106,107,109,110,112,113,114,117,118,119,120,122,123,124,126,128,129,143,149,150,151,152,153,156,157,158,160,161,162,163,164,165,166,167,168,180,182,183,184,185,188,190,192,202,209,],[84,-64,106,-60,-67,84,84,84,-51,-63,-55,-58,84,-62,-48,-66,-65,84,-61,84,84,-56,-57,84,-59,84,84,84,84,84,84,84,84,84,84,84,84,-49,-50,-68,84,-71,-70,84,-73,106,84,106,106,84,84,-52,-54,-53,-72,-74,106,106,106,84,84,-69,84,84,]),'NEWLINE':([6,9,11,17,21,25,28,30,31,34,37,56,63,66,73,77,78,79,80,81,82,86,87,88,89,90,92,93,94,95,96,97,98,100,104,109,110,113,127,145,147,149,150,151,153,155,156,158,160,162,163,166,167,168,169,170,180,182,183,184,185,187,191,192,196,198,206,212,213,215,218,],[10,14,16,24,27,33,35,36,38,42,43,62,70,74,74,74,-64,-37,-41,-60,-67,-51,-63,-55,-35,-58,-62,-40,-48,-66,125,-34,-65,-61,74,-56,-57,-59,-39,177,178,-49,-50,-68,-71,-38,-70,-73,-43,-42,-44,-52,-54,-53,-36,186,-72,-74,-45,-46,-47,74,74,-69,200,74,74,74,74,74,74,]),'-':([71,78,80,81,82,83,84,85,86,87,88,90,91,92,94,95,98,99,100,106,107,109,110,112,113,114,117,118,119,120,122,123,124,126,128,129,143,149,150,151,152,153,156,157,158,160,161,162,163,164,165,166,167,168,180,182,183,184,185,188,190,192,202,209,],[85,-64,107,-60,-67,85,85,85,-51,-63,-55,-58,85,-62,-48,-66,-65,85,-61,85,85,-56,-57,85,-59,85,85,85,85,85,85,85,85,85,85,85,85,-49,-50,-68,85,-71,-70,85,-73,107,85,107,107,85,85,-52,-54,-53,-72,-74,107,107,107,85,85,-69,85,85,]),',':([65,67,68,76,78,79,80,81,82,86,87,88,89,90,92,93,94,95,97,98,100,101,108,109,110,113,115,116,127,149,150,151,153,155,156,158,159,160,162,163,166,167,168,169,180,181,182,183,184,185,192,],[72,-32,-33,72,-64,-37,-41,-60,-67,-51,-63,-55,-35,-58,-62,-40,-48,-66,-34,-65,-61,-31,152,-56,-57,-59,157,-75,-39,-49,-50,-68,-71,-38,-70,-73,157,-43,-42,-44,-52,-54,-53,-36,-72,-76,-74,-45,-46,-47,-69,]),'RULE':([8,44,],[12,-8,]),'.':([78,81,82,87,88,90,92,95,98,100,113,151,153,156,158,180,182,192,],[-64,-60,-67,-63,111,-58,-62,-66,-65,-61,-59,-68,-71,-70,-73,-72,-74,-69,]),'TO':([199,],[205,]),'CONTINUE':([74,75,102,103,105,130,131,132,133,134,135,136,138,139,140,141,144,146,148,172,173,177,178,186,193,197,200,203,204,211,216,217,219,220,],[-86,-28,-27,147,-30,-26,147,-16,-25,-15,-14,-24,-13,-88,-18,-17,-19,-20,-29,-87,-89,-92,-91,-90,-85,-79,-21,-80,-78,-81,-83,-82,-77,-84,]),'ACTION':([32,40,62,70,],[39,47,-10,-11,]),'ELSEIF':([74,172,197,203,216,220,],[-86,-87,202,209,-83,-84,]),':':([2,5,7,12,18,39,47,58,59,65,67,68,69,76,78,79,80,81,82,86,87,88,89,90,92,93,94,95,97,98,100,101,109,110,113,127,142,149,150,151,153,155,156,158,160,162,163,166,167,168,169,171,174,176,180,182,183,184,185,192,194,201,207,208,210,214,],[6,9,11,17,25,45,52,64,66,73,-32,-33,77,104,-64,-37,-41,-60,-67,-51,-63,-55,-35,-58,-62,-40,-48,-66,-34,-65,-61,-31,-56,-57,-59,-39,175,-49,-50,-68,-71,-38,-70,-73,-43,-42,-44,-52,-54,-53,-36,187,189,191,-72,-74,-45,-46,-47,-69,198,206,212,213,215,218,]),'=':([45,52,64,78,80,81,82,86,87,88,90,92,93,94,95,98,100,109,110,113,118,120,121,149,150,151,153,156,158,160,162,163,166,167,168,175,180,182,183,184,185,189,192,],[51,57,71,-64,-41,-60,-67,-51,-63,-55,-58,-62,119,-48,-66,-65,-61,-56,-57,-59,161,164,165,-49,-50,-68,-71,-70,-73,-43,-42,-44,-52,-54,-53,190,-72,-74,-45,-46,-47,195,-69,]),'<':([78,80,81,82,86,87,88,90,92,93,94,95,98,100,109,110,113,149,150,151,153,156,158,160,162,163,166,167,168,180,182,183,184,185,192,],[-64,-41,-60,-67,-51,-63,-55,-58,-62,120,-48,-66,-65,-61,-56,-57,-59,-49,-50,-68,-71,-70,-73,-43,-42,-44,-52,-54,-53,-72,-74,-45,-46,-47,-69,]),'$end':([3,19,60,],[0,-1,-12,]),'FUNCTION':([13,46,],[18,-9,]),'STRING':([15,22,27,35,36,43,71,83,84,85,91,99,106,107,112,114,117,118,119,120,122,123,124,126,128,129,143,152,157,161,164,165,188,190,202,209,],[21,30,-4,-3,-5,-6,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'FOR':([74,75,102,103,105,130,131,132,133,134,135,136,138,139,140,141,144,146,148,172,173,177,178,186,193,197,200,203,204,211,216,217,219,220,],[-86,-28,-27,137,-30,-26,137,-16,-25,-15,-14,-24,-13,-88,-18,-17,-19,-20,-29,-87,-89,-92,-91,-90,-85,-79,-21,-80,-78,-81,-83,-82,-77,-84,]),'ELSE':([74,172,197,203,216,220,],[-86,-87,201,208,-83,-84,]),'PLAYER':([4,50,],[7,-7,]),'IN':([174,],[188,]),'[':([71,78,81,82,83,84,85,87,88,90,91,92,95,98,99,100,106,107,112,113,114,117,118,119,120,122,123,124,126,128,129,143,151,152,153,156,157,158,161,164,165,180,182,188,190,192,202,209,],[91,-64,-60,-67,91,91,91,-63,112,-58,91,-62,-66,-65,91,-61,91,91,91,-59,91,91,91,91,91,91,91,91,91,91,91,91,-68,91,-71,-70,91,-73,91,91,91,-72,-74,91,91,-69,91,91,]),'PIECE':([0,],[2,]),']':([78,79,80,81,82,86,87,88,89,90,92,93,94,95,97,98,100,109,110,113,115,116,127,149,150,151,153,154,155,156,158,160,162,163,166,167,168,169,180,181,182,183,184,185,192,],[-64,-37,-41,-60,-67,-51,-63,-55,-35,-58,-62,-40,-48,-66,-34,-65,-61,-56,-57,-59,156,-75,-39,-49,-50,-68,-71,180,-38,-70,-73,-43,-42,-44,-52,-54,-53,-36,-72,-76,-74,-45,-46,-47,-69,]),'ID':([51,53,54,57,59,61,69,71,72,74,75,83,84,85,91,99,102,103,105,106,107,111,112,114,117,118,119,120,122,123,124,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,146,148,152,157,161,164,165,172,173,177,178,186,188,190,193,197,200,202,203,204,209,211,216,217,219,220,],[56,58,59,63,68,69,68,92,68,-86,-28,92,92,92,92,92,-27,142,-30,92,92,153,92,92,92,92,92,92,92,92,92,92,92,92,-26,142,-16,-25,-15,-14,-24,174,-13,-88,-18,-17,92,-19,-20,-29,92,92,92,92,92,-87,-89,-92,-91,-90,92,92,-85,-79,-21,92,-80,-78,92,-81,-83,-82,-77,-84,]),'IF':([74,75,102,103,105,130,131,132,133,134,135,136,138,139,140,141,144,146,148,172,173,177,178,186,193,197,200,203,204,211,216,217,219,220,],[-86,-28,-27,143,-30,-26,143,-16,-25,-15,-14,-24,-13,-88,-18,-17,-19,-20,-29,-87,-89,-92,-91,-90,-85,-79,-21,-80,-78,-81,-83,-82,-77,-84,]),'AND':([78,79,80,81,82,86,87,88,89,90,92,93,94,95,98,100,109,110,113,127,149,150,151,153,155,156,158,160,162,163,166,167,168,169,180,182,183,184,185,192,],[-64,-37,-41,-60,-67,-51,-63,-55,114,-58,-62,-40,-48,-66,-65,-61,-56,-57,-59,-39,-49,-50,-68,-71,-38,-70,-73,-43,-42,-44,-52,-54,-53,114,-72,-74,-45,-46,-47,-69,]),'INDENT':([10,14,16,24,33,74,],[15,20,23,32,41,103,]),'NIL':([71,83,84,85,91,99,106,107,112,114,117,118,119,120,122,123,124,126,128,129,143,152,157,161,164,165,188,190,202,209,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'BREAK':([74,75,102,103,105,130,131,132,133,134,135,136,138,139,140,141,144,146,148,172,173,177,178,186,193,197,200,203,204,211,216,217,219,220,],[-86,-28,-27,145,-30,-26,145,-16,-25,-15,-14,-24,-13,-88,-18,-17,-19,-20,-29,-87,-89,-92,-91,-90,-85,-79,-21,-80,-78,-81,-83,-82,-77,-84,]),'BOOLEAN':([71,83,84,85,91,99,106,107,112,114,117,118,119,120,122,123,124,126,128,129,143,152,157,161,164,165,188,190,202,209,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'NOT':([71,83,91,99,112,114,117,126,128,129,143,152,157,188,190,202,209,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'>':([78,80,81,82,86,87,88,90,92,93,94,95,98,100,109,110,113,149,150,151,153,156,158,160,162,163,166,167,168,180,182,183,184,185,192,],[-64,-41,-60,-67,-51,-63,-55,-58,-62,118,-48,-66,-65,-61,-56,-57,-59,-49,-50,-68,-71,-70,-73,-43,-42,-44,-52,-54,-53,-72,-74,-45,-46,-47,-69,]),'OR':([78,79,80,81,82,86,87,88,89,90,92,93,94,95,97,98,100,109,110,113,127,149,150,151,153,155,156,158,160,162,163,166,167,168,169,180,182,183,184,185,192,],[-64,-37,-41,-60,-67,-51,-63,-55,-35,-58,-62,-40,-48,-66,126,-65,-61,-56,-57,-59,-39,-49,-50,-68,-71,-38,-70,-73,-43,-42,-44,-52,-54,-53,-36,-72,-74,-45,-46,-47,-69,]),'~':([78,80,81,82,86,87,88,90,92,93,94,95,98,100,109,110,113,149,150,151,153,156,158,160,162,163,166,167,168,180,182,183,184,185,192,],[-64,-41,-60,-67,-51,-63,-55,-58,-62,121,-48,-66,-65,-61,-56,-57,-59,-49,-50,-68,-71,-70,-73,-43,-42,-44,-52,-54,-53,-72,-74,-45,-46,-47,-69,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'action_stmt':([32,],[40,]),'return_stmt':([103,131,],[130,130,]),'not_test':([71,83,91,99,112,114,117,126,128,129,143,152,157,188,190,202,209,],[79,79,79,127,79,155,79,79,79,79,79,79,79,79,79,79,79,]),'operand':([71,83,91,99,112,114,117,118,119,120,126,128,129,143,152,157,161,164,165,188,190,202,209,],[80,80,80,80,80,80,80,160,162,163,80,80,80,80,80,80,183,184,185,80,80,80,80,]),'array':([71,83,84,85,91,99,106,107,112,114,117,118,119,120,122,123,124,126,128,129,143,152,157,161,164,165,188,190,202,209,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'input_stmt':([0,],[3,]),'flow_stmt':([103,131,],[132,132,]),'parameters':([59,69,],[65,76,]),'continue_stmt':([103,131,],[133,133,]),'assign_stmt':([103,131,],[134,134,]),'elseif_stmt':([197,],[203,]),'factor':([71,83,84,85,91,99,106,107,112,114,117,118,119,120,122,123,124,126,128,129,143,152,157,161,164,165,188,190,202,209,],[86,86,109,110,86,86,86,86,86,86,86,86,86,86,166,167,168,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'suite':([66,73,77,104,187,191,198,206,212,213,215,218,],[75,102,105,148,193,197,204,211,216,217,219,220,]),'suite_stmt':([103,],[131,]),'parameter':([59,69,72,],[67,67,101,]),'compound_stmt':([103,131,],[135,135,]),'empty':([41,],[48,]),'break_stmt':([103,131,],[136,136,]),'function_stmt':([13,],[19,]),'power':([71,83,84,85,91,99,106,107,112,114,117,118,119,120,122,123,124,126,128,129,143,152,157,161,164,165,188,190,202,209,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'simple_stmt':([103,131,],[138,138,]),'board_stmt':([1,],[4,]),'and_test':([71,83,91,112,117,126,128,129,143,152,157,188,190,202,209,],[89,89,89,89,89,169,89,89,89,89,89,89,89,89,89,]),'for_stmt':([103,131,],[140,140,]),'player_stmt':([4,],[8,]),'stmt':([103,131,],[139,173,]),'atom':([71,83,84,85,91,99,106,107,112,114,117,118,119,120,122,123,124,126,128,129,143,152,157,161,164,165,188,190,202,209,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'funcdef':([49,103,131,],[55,141,141,]),'piece_stmt':([0,],[1,]),'trailer':([88,],[113,]),'rule_stmt':([8,],[13,]),'func_expr':([71,83,84,85,91,99,106,107,112,114,117,118,119,120,122,123,124,126,128,129,143,152,157,161,164,165,188,190,202,209,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'comparison':([71,83,91,99,112,114,117,126,128,129,143,152,157,188,190,202,209,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'term':([71,83,91,99,106,107,112,114,117,118,119,120,126,128,129,143,152,157,161,164,165,188,190,202,209,],[94,94,94,94,149,150,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'if_stmt':([103,131,],[144,144,]),'parameter_list':([91,117,],[115,159,]),'expr':([71,83,91,112,117,128,129,143,152,157,188,190,202,209,],[96,108,116,154,116,170,171,176,179,181,194,196,207,214,]),'or_test':([71,83,91,112,117,128,129,143,152,157,188,190,202,209,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'while_stmt':([103,131,],[146,146,]),'piece_expr':([15,],[22,]),'position':([71,83,84,85,91,99,106,107,112,114,117,118,119,120,122,123,124,126,128,129,143,152,157,161,164,165,188,190,202,209,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'global_assign_stmt':([41,],[49,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> input_stmt","S'",1,None,None,None),
  ('input_stmt -> piece_stmt board_stmt player_stmt rule_stmt function_stmt','input_stmt',5,'p_input_stmt','yaccing.py',48),
  ('piece_stmt -> PIECE : NEWLINE INDENT piece_expr DEDENT','piece_stmt',6,'p_piece_stmt','yaccing.py',52),
  ('piece_expr -> STRING NUMBER NEWLINE','piece_expr',3,'p_piece_expr','yaccing.py',56),
  ('piece_expr -> STRING NEWLINE','piece_expr',2,'p_piece_expr','yaccing.py',57),
  ('piece_expr -> piece_expr STRING NEWLINE','piece_expr',3,'p_piece_expr','yaccing.py',58),
  ('piece_expr -> piece_expr STRING NUMBER NEWLINE','piece_expr',4,'p_piece_expr','yaccing.py',59),
  ('board_stmt -> BOARD : NEWLINE INDENT NUMBER NUMBER NEWLINE DEDENT','board_stmt',8,'p_board_stmt','yaccing.py',71),
  ('player_stmt -> PLAYER : NEWLINE INDENT NUMBER NEWLINE DEDENT','player_stmt',7,'p_player_stmt','yaccing.py',75),
  ('rule_stmt -> RULE : NEWLINE INDENT action_stmt DEDENT','rule_stmt',6,'p_rule_stmt','yaccing.py',79),
  ('action_stmt -> ACTION : = ID NEWLINE','action_stmt',5,'p_action_stmt','yaccing.py',83),
  ('action_stmt -> action_stmt ACTION : = ID NEWLINE','action_stmt',6,'p_action_stmt','yaccing.py',84),
  ('function_stmt -> FUNCTION : NEWLINE INDENT global_assign_stmt funcdef DEDENT','function_stmt',7,'p_function_stmt','yaccing.py',91),
  ('stmt -> simple_stmt','stmt',1,'p_stmt','yaccing.py',95),
  ('stmt -> compound_stmt','stmt',1,'p_stmt','yaccing.py',96),
  ('simple_stmt -> assign_stmt','simple_stmt',1,'p_simple_stmt','yaccing.py',100),
  ('simple_stmt -> flow_stmt','simple_stmt',1,'p_simple_stmt','yaccing.py',101),
  ('compound_stmt -> funcdef','compound_stmt',1,'p_compound_stmt','yaccing.py',105),
  ('compound_stmt -> for_stmt','compound_stmt',1,'p_compound_stmt','yaccing.py',106),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','yaccing.py',107),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','yaccing.py',108),
  ('assign_stmt -> ID : = expr NEWLINE','assign_stmt',5,'p_assign_stmt','yaccing.py',112),
  ('global_assign_stmt -> global_assign_stmt GLOBAL ID : = expr NEWLINE','global_assign_stmt',7,'p_global_assign_stmt','yaccing.py',116),
  ('global_assign_stmt -> empty','global_assign_stmt',1,'p_global_assign_stmt','yaccing.py',117),
  ('flow_stmt -> break_stmt','flow_stmt',1,'p_flow_stmt','yaccing.py',124),
  ('flow_stmt -> continue_stmt','flow_stmt',1,'p_flow_stmt','yaccing.py',125),
  ('flow_stmt -> return_stmt','flow_stmt',1,'p_flow_stmt','yaccing.py',126),
  ('funcdef -> DEF ID parameters : suite','funcdef',5,'p_funcdef','yaccing.py',130),
  ('funcdef -> DEF ID : suite','funcdef',4,'p_funcdef','yaccing.py',131),
  ('funcdef -> funcdef DEF ID parameters : suite','funcdef',6,'p_funcdef','yaccing.py',132),
  ('funcdef -> funcdef DEF ID : suite','funcdef',5,'p_funcdef','yaccing.py',133),
  ('parameters -> parameters , parameter','parameters',3,'p_parameters','yaccing.py',146),
  ('parameters -> parameter','parameters',1,'p_parameters','yaccing.py',147),
  ('parameter -> ID','parameter',1,'p_parameter','yaccing.py',154),
  ('expr -> or_test','expr',1,'p_expr','yaccing.py',161),
  ('or_test -> and_test','or_test',1,'p_or_test','yaccing.py',165),
  ('or_test -> or_test OR and_test','or_test',3,'p_or_test','yaccing.py',166),
  ('and_test -> not_test','and_test',1,'p_and_test','yaccing.py',173),
  ('and_test -> and_test AND not_test','and_test',3,'p_and_test','yaccing.py',174),
  ('not_test -> NOT not_test','not_test',2,'p_not_test','yaccing.py',181),
  ('not_test -> comparison','not_test',1,'p_not_test','yaccing.py',182),
  ('comparison -> operand','comparison',1,'p_comparison','yaccing.py',189),
  ('comparison -> comparison = operand','comparison',3,'p_comparison','yaccing.py',190),
  ('comparison -> comparison > operand','comparison',3,'p_comparison','yaccing.py',191),
  ('comparison -> comparison < operand','comparison',3,'p_comparison','yaccing.py',192),
  ('comparison -> comparison > = operand','comparison',4,'p_comparison','yaccing.py',193),
  ('comparison -> comparison < = operand','comparison',4,'p_comparison','yaccing.py',194),
  ('comparison -> comparison ~ = operand','comparison',4,'p_comparison','yaccing.py',195),
  ('operand -> term','operand',1,'p_operand','yaccing.py',204),
  ('operand -> operand + term','operand',3,'p_operand','yaccing.py',205),
  ('operand -> operand - term','operand',3,'p_operand','yaccing.py',206),
  ('term -> factor','term',1,'p_term','yaccing.py',213),
  ('term -> term * factor','term',3,'p_term','yaccing.py',214),
  ('term -> term / factor','term',3,'p_term','yaccing.py',215),
  ('term -> term % factor','term',3,'p_term','yaccing.py',216),
  ('factor -> power','factor',1,'p_factor','yaccing.py',223),
  ('factor -> + factor','factor',2,'p_factor','yaccing.py',224),
  ('factor -> - factor','factor',2,'p_factor','yaccing.py',225),
  ('power -> atom','power',1,'p_power','yaccing.py',234),
  ('power -> power trailer','power',2,'p_power','yaccing.py',235),
  ('atom -> array','atom',1,'p_atom','yaccing.py',242),
  ('atom -> position','atom',1,'p_atom','yaccing.py',243),
  ('atom -> ID','atom',1,'p_atom','yaccing.py',244),
  ('atom -> STRING','atom',1,'p_atom','yaccing.py',245),
  ('atom -> NUMBER','atom',1,'p_atom','yaccing.py',246),
  ('atom -> BOOLEAN','atom',1,'p_atom','yaccing.py',247),
  ('atom -> NIL','atom',1,'p_atom','yaccing.py',248),
  ('atom -> func_expr','atom',1,'p_atom','yaccing.py',249),
  ('atom -> ( expr )','atom',3,'p_atom','yaccing.py',250),
  ('position -> ( expr , expr )','position',5,'p_position','yaccing.py',262),
  ('array -> [ parameter_list ]','array',3,'p_array','yaccing.py',266),
  ('trailer -> . ID','trailer',2,'p_trailer','yaccing.py',270),
  ('trailer -> [ expr ]','trailer',3,'p_trailer','yaccing.py',271),
  ('func_expr -> ID ( )','func_expr',3,'p_func_expr','yaccing.py',278),
  ('func_expr -> ID ( parameter_list )','func_expr',4,'p_func_expr','yaccing.py',279),
  ('parameter_list -> expr','parameter_list',1,'p_parameter_list','yaccing.py',286),
  ('parameter_list -> parameter_list , expr','parameter_list',3,'p_parameter_list','yaccing.py',287),
  ('for_stmt -> FOR ID : = NUMBER TO NUMBER : suite','for_stmt',9,'p_for_stmt','yaccing.py',294),
  ('for_stmt -> FOR ID IN expr : suite','for_stmt',6,'p_for_stmt','yaccing.py',295),
  ('if_stmt -> IF expr : suite','if_stmt',4,'p_if_stmt','yaccing.py',302),
  ('if_stmt -> IF expr : suite elseif_stmt','if_stmt',5,'p_if_stmt','yaccing.py',303),
  ('if_stmt -> IF expr : suite ELSE : suite','if_stmt',7,'p_if_stmt','yaccing.py',304),
  ('if_stmt -> IF expr : suite elseif_stmt ELSE : suite','if_stmt',8,'p_if_stmt','yaccing.py',305),
  ('elseif_stmt -> ELSEIF expr : suite','elseif_stmt',4,'p_elseif_stmt','yaccing.py',317),
  ('elseif_stmt -> elseif_stmt ELSEIF expr : suite','elseif_stmt',5,'p_elseif_stmt','yaccing.py',318),
  ('while_stmt -> WHILE expr : suite','while_stmt',4,'p_while_stmt','yaccing.py',325),
  ('suite -> NEWLINE','suite',1,'p_suite','yaccing.py',329),
  ('suite -> NEWLINE INDENT suite_stmt DEDENT','suite',4,'p_suite','yaccing.py',330),
  ('suite_stmt -> stmt','suite_stmt',1,'p_suite_stmt','yaccing.py',337),
  ('suite_stmt -> suite_stmt stmt','suite_stmt',2,'p_suite_stmt','yaccing.py',338),
  ('return_stmt -> RETURN expr NEWLINE','return_stmt',3,'p_return_stmt','yaccing.py',346),
  ('continue_stmt -> CONTINUE NEWLINE','continue_stmt',2,'p_continue_stmt','yaccing.py',351),
  ('break_stmt -> BREAK NEWLINE','break_stmt',2,'p_break_stmt','yaccing.py',355),
  ('empty -> <empty>','empty',0,'p_empty','yaccing.py',359),
]
