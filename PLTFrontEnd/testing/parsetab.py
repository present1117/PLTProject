
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '2\xdaF\xc92\x1b\xa3\xfa\r\r\x17\xee\x0e\x84-\xfd'
    
_lr_action_items = {'DEDENT':([22,27,35,36,38,40,42,43,56,75,78,106,133,134,157,160,165,167,170,171,172,174,175,176,177,178,179,182,184,186,188,194,195,198,199,200,204,210,212,215,216,221,222,229,234,235,237,238,],[29,-4,-3,-5,44,46,50,-6,76,104,-10,-11,-90,-32,-31,-34,-22,190,-30,194,-17,-16,-15,-28,-14,-92,-19,-20,-21,-29,-33,-91,-93,-96,-95,-18,-94,-24,-89,-83,-25,-84,-82,-85,-87,-86,-81,-88,]),'*':([59,60,61,64,66,68,69,70,71,84,85,88,95,109,110,119,123,126,128,137,138,146,147,148,151,154,164,],[-68,-64,-71,-67,-62,-66,-70,-69,-65,-55,-59,116,-63,-60,-61,-72,-75,-74,-77,116,116,-56,-58,-57,-76,-78,-73,]),'RETURN':([133,158,165,170,171,172,174,175,176,177,178,179,182,184,186,194,195,198,199,200,204,212,215,221,222,229,234,235,237,238,],[-90,168,-22,-30,168,-17,-16,-15,-28,-14,-92,-19,-20,-21,-29,-91,-93,-96,-95,-18,-94,-89,-83,-84,-82,-85,-87,-86,-81,-88,]),'GLOBAL':([41,48,49,63,165,],[-97,-27,53,-26,-22,]),'NUMBER':([20,21,23,26,30,53,62,67,82,83,91,93,98,107,108,111,112,113,114,116,117,118,120,121,125,127,133,141,144,145,158,165,166,168,169,170,171,172,174,175,176,177,178,179,181,182,184,186,191,194,195,198,199,200,201,204,206,212,214,215,220,221,222,223,227,229,234,235,237,238,],[26,28,31,34,37,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-90,59,59,59,59,-22,189,59,59,-30,59,-17,-16,-15,-28,-14,-92,-19,59,-20,-21,-29,203,-91,-93,-96,-95,-18,59,-94,59,-89,218,-83,59,-84,-82,228,59,-85,-87,-86,-81,-88,]),'WHILE':([133,158,165,170,171,172,174,175,176,177,178,179,182,184,186,194,195,198,199,200,204,212,215,221,222,229,234,235,237,238,],[-90,169,-22,-30,169,-17,-16,-15,-28,-14,-92,-19,-20,-21,-29,-91,-93,-96,-95,-18,-94,-89,-83,-84,-82,-85,-87,-86,-81,-88,]),'BOARD':([1,29,],[5,-2,]),'DEF':([41,48,49,55,56,63,75,133,134,157,160,165,188,190,194,],[-97,-27,54,74,77,-26,77,-90,-32,-31,-34,-22,-33,-23,-91,]),'/':([59,60,61,64,66,68,69,70,71,84,85,88,95,109,110,119,123,126,128,137,138,146,147,148,151,154,164,],[-68,-64,-71,-67,-62,-66,-70,-69,-65,-55,-59,118,-63,-60,-61,-72,-75,-74,-77,118,118,-56,-58,-57,-76,-78,-73,]),'%':([59,60,61,64,66,68,69,70,71,84,85,88,95,109,110,119,123,126,128,137,138,146,147,148,151,154,164,],[-68,-64,-71,-67,-62,-66,-70,-69,-65,-55,-59,117,-63,-60,-61,-72,-75,-74,-77,117,117,-56,-58,-57,-76,-78,-73,]),')':([59,60,61,64,66,68,69,70,71,80,81,84,85,86,87,88,89,90,95,97,98,109,110,119,122,123,126,128,129,137,138,139,140,142,143,146,147,148,149,150,151,153,154,161,162,163,164,],[-68,-64,-71,-67,-62,-66,-70,-69,-65,-41,-45,-55,-59,-39,-44,-52,119,-38,-63,-79,128,-60,-61,-72,-43,-75,-74,-77,154,-53,-54,-42,-47,-46,-48,-56,-58,-57,164,-40,-76,-80,-78,-49,-50,-51,-73,]),'(':([53,62,67,68,82,83,91,93,98,107,108,111,112,113,114,116,117,118,120,121,125,127,133,141,144,145,158,165,168,169,170,171,172,174,175,176,177,178,179,180,181,182,184,186,189,194,195,198,199,200,201,203,204,206,212,215,220,221,222,227,229,234,235,237,238,],[62,62,62,98,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-90,62,62,62,62,-22,62,62,-30,62,-17,-16,-15,-28,-14,-92,-19,98,62,-20,-21,-29,201,-91,-93,-96,-95,-18,62,201,-94,62,-89,-83,62,-84,-82,62,-85,-87,-86,-81,-88,]),'+':([59,60,61,62,64,66,67,68,69,70,71,81,82,83,84,85,88,91,93,95,98,107,108,109,110,111,112,113,114,116,117,118,119,120,121,123,125,126,127,128,137,138,140,141,142,143,144,145,146,147,148,151,154,161,162,163,164,168,169,181,201,206,220,227,],[-68,-64,-71,82,-67,-62,82,-66,-70,-69,-65,107,82,82,-55,-59,-52,82,82,-63,82,82,82,-60,-61,82,82,82,82,82,82,82,-72,82,82,-75,82,-74,82,-77,-53,-54,107,82,107,107,82,82,-56,-58,-57,-76,-78,107,107,107,-73,82,82,82,82,82,82,82,]),'NEWLINE':([6,9,11,17,21,25,28,30,31,34,37,57,59,60,61,64,66,68,69,70,71,79,80,81,84,85,86,87,88,90,95,99,101,109,110,119,122,123,126,128,132,136,137,138,139,140,142,143,146,147,148,150,151,152,154,159,161,162,163,164,183,185,187,192,202,205,208,211,217,224,230,231,233,236,],[10,14,16,24,27,33,35,36,38,42,43,78,-68,-64,-71,-67,-62,-66,-70,-69,-65,106,-41,-45,-55,-59,-39,-44,-52,-38,-63,130,133,-60,-61,-72,-43,-75,-74,-77,133,133,-53,-54,-42,-47,-46,-48,-56,-58,-57,-40,-76,165,-78,133,-49,-50,-51,-73,198,199,200,204,210,133,133,216,133,133,133,133,133,133,]),'-':([59,60,61,62,64,66,67,68,69,70,71,81,82,83,84,85,88,91,93,95,98,107,108,109,110,111,112,113,114,116,117,118,119,120,121,123,125,126,127,128,137,138,140,141,142,143,144,145,146,147,148,151,154,161,162,163,164,168,169,181,201,206,220,227,],[-68,-64,-71,83,-67,-62,83,-66,-70,-69,-65,108,83,83,-55,-59,-52,83,83,-63,83,83,83,-60,-61,83,83,83,83,83,83,83,-72,83,83,-75,83,-74,83,-77,-53,-54,108,83,108,108,83,83,-56,-58,-57,-76,-78,108,108,108,-73,83,83,83,83,83,83,83,]),',':([59,60,61,64,66,68,69,70,71,80,81,84,85,86,87,88,89,90,95,96,97,100,102,103,109,110,119,122,123,126,128,129,135,137,138,139,140,142,143,146,147,148,150,151,153,154,156,161,162,163,164,209,],[-68,-64,-71,-67,-62,-66,-70,-69,-65,-41,-45,-55,-59,-39,-44,-52,120,-38,-63,127,-79,131,-36,-37,-60,-61,-72,-43,-75,-74,-77,127,131,-53,-54,-42,-47,-46,-48,-56,-58,-57,-40,-76,-80,-78,-35,-49,-50,-51,-73,120,]),'RULE':([8,44,],[12,-8,]),'.':([59,60,61,64,65,66,68,69,70,71,85,95,119,123,126,128,151,154,164,180,187,],[-68,-64,-71,-67,92,-62,-66,-70,-69,-65,92,-63,-72,-75,-74,-77,-76,-78,-73,-66,-71,]),'TO':([218,],[223,]),'INIT':([54,],[72,]),'CONTINUE':([133,158,165,170,171,172,174,175,176,177,178,179,182,184,186,194,195,198,199,200,204,212,215,221,222,229,234,235,237,238,],[-90,185,-22,-30,185,-17,-16,-15,-28,-14,-92,-19,-20,-21,-29,-91,-93,-96,-95,-18,-94,-89,-83,-84,-82,-85,-87,-86,-81,-88,]),'ACTION':([32,40,78,106,],[39,47,-10,-11,]),'ELSEIF':([133,194,215,221,234,238,],[-90,-91,220,227,-87,-88,]),':':([2,5,7,12,18,39,47,59,60,61,64,65,66,68,69,70,71,72,73,80,81,84,85,86,87,88,90,95,100,102,103,105,109,110,119,122,123,126,128,135,137,138,139,140,142,143,146,147,148,150,151,154,156,161,162,163,164,180,187,193,196,197,213,219,225,226,228,232,],[6,9,11,17,25,45,52,-68,-64,-71,-67,94,-62,-66,-70,-69,-65,99,101,-41,-45,-55,-59,-39,-44,-52,-38,-63,132,-36,-37,136,-60,-61,-72,-43,-75,-74,-77,159,-53,-54,-42,-47,-46,-48,-56,-58,-57,-40,-76,-78,-35,-49,-50,-51,-73,-66,-71,205,207,208,217,224,230,231,233,236,]),'=':([45,52,59,60,61,64,66,68,69,70,71,81,84,85,87,88,94,95,109,110,112,114,115,119,123,126,128,137,138,140,142,143,146,147,148,151,154,161,162,163,164,207,],[51,58,-68,-64,-71,-67,-62,-66,-70,-69,-65,-45,-55,-59,113,-52,125,-63,-60,-61,141,144,145,-72,-75,-74,-77,-53,-54,-47,-46,-48,-56,-58,-57,-76,-78,-49,-50,-51,-73,214,]),'<':([59,60,61,64,66,68,69,70,71,81,84,85,87,88,95,109,110,119,123,126,128,137,138,140,142,143,146,147,148,151,154,161,162,163,164,],[-68,-64,-71,-67,-62,-66,-70,-69,-65,-45,-55,-59,114,-52,-63,-60,-61,-72,-75,-74,-77,-53,-54,-47,-46,-48,-56,-58,-57,-76,-78,-49,-50,-51,-73,]),'$end':([3,19,76,104,],[0,-1,-12,-13,]),'FUNCTION':([13,46,],[18,-9,]),'STRING':([15,22,27,35,36,43,53,62,67,82,83,91,93,98,107,108,111,112,113,114,116,117,118,120,121,125,127,133,141,144,145,155,158,165,167,168,169,170,171,172,174,175,176,177,178,179,181,182,184,186,194,195,198,199,200,201,204,206,210,212,215,216,220,221,222,227,229,234,235,237,238,],[21,30,-4,-3,-5,-6,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-90,64,64,64,166,64,-22,191,64,64,-30,64,-17,-16,-15,-28,-14,-92,-19,64,-20,-21,-29,-91,-93,-96,-95,-18,64,-94,64,-24,-89,-83,-25,64,-84,-82,64,-85,-87,-86,-81,-88,]),'FOR':([133,158,165,170,171,172,174,175,176,177,178,179,182,184,186,194,195,198,199,200,204,212,215,221,222,229,234,235,237,238,],[-90,173,-22,-30,173,-17,-16,-15,-28,-14,-92,-19,-20,-21,-29,-91,-93,-96,-95,-18,-94,-89,-83,-84,-82,-85,-87,-86,-81,-88,]),'ELSE':([133,194,215,221,234,238,],[-90,-91,219,226,-87,-88,]),'PLAYER':([4,50,],[7,-7,]),'IN':([196,],[206,]),'[':([53,59,60,61,62,64,65,66,67,68,69,70,71,82,83,85,91,93,95,98,107,108,111,112,113,114,116,117,118,119,120,121,123,125,126,127,128,133,141,144,145,151,154,158,164,165,168,169,170,171,172,174,175,176,177,178,179,180,181,182,184,186,187,194,195,198,199,200,201,204,206,212,215,220,221,222,227,229,234,235,237,238,],[67,-68,-64,-71,67,-67,93,-62,67,-66,-70,-69,-65,67,67,93,67,67,-63,67,67,67,67,67,67,67,67,67,67,-72,67,67,-75,67,-74,67,-77,-90,67,67,67,-76,-78,67,-73,-22,67,67,-30,67,-17,-16,-15,-28,-14,-92,-19,-66,67,-20,-21,-29,-71,-91,-93,-96,-95,-18,67,-94,67,-89,-83,67,-84,-82,67,-85,-87,-86,-81,-88,]),'PIECE':([0,],[2,]),']':([59,60,61,64,66,68,69,70,71,80,81,84,85,86,87,88,90,95,96,97,109,110,119,122,123,124,126,128,137,138,139,140,142,143,146,147,148,150,151,153,154,161,162,163,164,],[-68,-64,-71,-67,-62,-66,-70,-69,-65,-41,-45,-55,-59,-39,-44,-52,-38,-63,126,-79,-60,-61,-72,-43,-75,151,-74,-77,-53,-54,-42,-47,-46,-48,-56,-58,-57,-40,-76,-80,-78,-49,-50,-51,-73,]),'ID':([51,53,54,58,62,67,73,74,77,82,83,91,92,93,98,105,107,108,111,112,113,114,116,117,118,120,121,125,127,131,133,141,144,145,158,165,168,169,170,171,172,173,174,175,176,177,178,179,181,182,184,186,194,195,198,199,200,201,204,206,212,215,220,221,222,227,229,234,235,237,238,],[57,68,73,79,68,68,103,73,105,68,68,68,123,68,68,103,68,68,68,68,68,68,68,68,68,68,68,68,68,103,-90,68,68,68,180,-22,68,68,-30,180,-17,196,-16,-15,-28,-14,-92,-19,68,-20,-21,-29,-91,-93,-96,-95,-18,68,-94,68,-89,-83,68,-84,-82,68,-85,-87,-86,-81,-88,]),'IF':([133,158,165,170,171,172,174,175,176,177,178,179,182,184,186,194,195,198,199,200,204,212,215,221,222,229,234,235,237,238,],[-90,181,-22,-30,181,-17,-16,-15,-28,-14,-92,-19,-20,-21,-29,-91,-93,-96,-95,-18,-94,-89,-83,-84,-82,-85,-87,-86,-81,-88,]),'AND':([59,60,61,64,66,68,69,70,71,80,81,84,85,86,87,88,95,109,110,119,122,123,126,128,137,138,139,140,142,143,146,147,148,150,151,154,161,162,163,164,],[-68,-64,-71,-67,-62,-66,-70,-69,-65,-41,-45,-55,-59,111,-44,-52,-63,-60,-61,-72,-43,-75,-74,-77,-53,-54,-42,-47,-46,-48,-56,-58,-57,111,-76,-78,-49,-50,-51,-73,]),'INDENT':([10,14,16,24,33,130,133,],[15,20,23,32,41,155,158,]),'NIL':([53,62,67,82,83,91,93,98,107,108,111,112,113,114,116,117,118,120,121,125,127,133,141,144,145,158,165,168,169,170,171,172,174,175,176,177,178,179,181,182,184,186,194,195,198,199,200,201,204,206,212,215,220,221,222,227,229,234,235,237,238,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-90,69,69,69,69,-22,69,69,-30,69,-17,-16,-15,-28,-14,-92,-19,69,-20,-21,-29,-91,-93,-96,-95,-18,69,-94,69,-89,-83,69,-84,-82,69,-85,-87,-86,-81,-88,]),'BREAK':([133,158,165,170,171,172,174,175,176,177,178,179,182,184,186,194,195,198,199,200,204,212,215,221,222,229,234,235,237,238,],[-90,183,-22,-30,183,-17,-16,-15,-28,-14,-92,-19,-20,-21,-29,-91,-93,-96,-95,-18,-94,-89,-83,-84,-82,-85,-87,-86,-81,-88,]),'BOOLEAN':([53,62,67,82,83,91,93,98,107,108,111,112,113,114,116,117,118,120,121,125,127,133,141,144,145,158,165,168,169,170,171,172,174,175,176,177,178,179,181,182,184,186,194,195,198,199,200,201,204,206,212,215,220,221,222,227,229,234,235,237,238,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-90,70,70,70,70,-22,70,70,-30,70,-17,-16,-15,-28,-14,-92,-19,70,-20,-21,-29,-91,-93,-96,-95,-18,70,-94,70,-89,-83,70,-84,-82,70,-85,-87,-86,-81,-88,]),'NOT':([62,67,91,93,98,111,120,121,125,127,168,169,181,201,206,220,227,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'>':([59,60,61,64,66,68,69,70,71,81,84,85,87,88,95,109,110,119,123,126,128,137,138,140,142,143,146,147,148,151,154,161,162,163,164,],[-68,-64,-71,-67,-62,-66,-70,-69,-65,-45,-55,-59,112,-52,-63,-60,-61,-72,-75,-74,-77,-53,-54,-47,-46,-48,-56,-58,-57,-76,-78,-49,-50,-51,-73,]),'OR':([59,60,61,64,66,68,69,70,71,80,81,84,85,86,87,88,90,95,109,110,119,122,123,126,128,137,138,139,140,142,143,146,147,148,150,151,154,161,162,163,164,],[-68,-64,-71,-67,-62,-66,-70,-69,-65,-41,-45,-55,-59,-39,-44,-52,121,-63,-60,-61,-72,-43,-75,-74,-77,-53,-54,-42,-47,-46,-48,-56,-58,-57,-40,-76,-78,-49,-50,-51,-73,]),'~':([59,60,61,64,66,68,69,70,71,81,84,85,87,88,95,109,110,119,123,126,128,137,138,140,142,143,146,147,148,151,154,161,162,163,164,],[-68,-64,-71,-67,-62,-66,-70,-69,-65,-45,-55,-59,115,-52,-63,-60,-61,-72,-75,-74,-77,-53,-54,-47,-46,-48,-56,-58,-57,-76,-78,-49,-50,-51,-73,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'atom':([53,62,67,82,83,91,93,98,107,108,111,112,113,114,116,117,118,120,121,125,127,141,144,145,158,168,169,171,181,201,206,220,227,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'action_stmt':([32,],[40,]),'return_stmt':([158,171,],[170,170,]),'not_test':([62,67,91,93,98,111,120,121,125,127,168,169,181,201,206,220,227,],[80,80,122,80,80,139,80,80,80,80,80,80,80,80,80,80,80,]),'operand':([62,67,91,93,98,111,112,113,114,120,121,125,127,141,144,145,168,169,181,201,206,220,227,],[81,81,81,81,81,81,140,142,143,81,81,81,81,161,162,163,81,81,81,81,81,81,81,]),'array':([53,62,67,82,83,91,93,98,107,108,111,112,113,114,116,117,118,120,121,125,127,141,144,145,158,168,169,171,181,201,206,220,227,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'input_stmt':([0,],[3,]),'flow_stmt':([158,171,],[172,172,]),'parameters':([73,105,],[100,135,]),'continue_stmt':([158,171,],[186,186,]),'while_stmt':([158,171,],[184,184,]),'assign_stmt':([53,158,171,],[63,174,174,]),'elseif_stmt':([215,],[221,]),'factor':([62,67,82,83,91,93,98,107,108,111,112,113,114,116,117,118,120,121,125,127,141,144,145,168,169,181,201,206,220,227,],[84,84,109,110,84,84,84,84,84,84,84,84,84,146,147,148,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'suite':([101,132,136,159,205,208,217,224,230,231,233,236,],[134,157,160,188,212,215,222,229,234,235,237,238,]),'suite_stmt':([158,],[171,]),'parameter':([73,105,131,],[102,102,156,]),'compound_stmt':([158,171,],[175,175,]),'empty':([41,],[48,]),'break_stmt':([158,171,],[176,176,]),'function_stmt':([13,],[19,]),'power':([53,62,67,82,83,91,93,98,107,108,111,112,113,114,116,117,118,120,121,125,127,141,144,145,158,168,169,171,181,201,206,220,227,],[65,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,65,85,85,65,85,85,85,85,85,]),'simple_stmt':([158,171,],[177,177,]),'board_stmt':([1,],[4,]),'and_test':([62,67,93,98,120,121,125,127,168,169,181,201,206,220,227,],[86,86,86,86,86,150,86,86,86,86,86,86,86,86,86,]),'for_stmt':([158,171,],[179,179,]),'player_stmt':([4,],[8,]),'stmt':([158,171,],[178,195,]),'func_expr':([53,62,67,82,83,91,93,98,107,108,111,112,113,114,116,117,118,120,121,125,127,141,144,145,158,168,169,171,181,201,206,220,227,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,187,61,61,187,61,61,61,61,61,]),'funcdef':([49,55,],[56,75,]),'piece_stmt':([0,],[1,]),'trailer':([65,85,],[95,95,]),'rule_stmt':([8,],[13,]),'comparison':([62,67,91,93,98,111,120,121,125,127,168,169,181,201,206,220,227,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'term':([62,67,91,93,98,107,108,111,112,113,114,120,121,125,127,141,144,145,168,169,181,201,206,220,227,],[88,88,88,88,88,137,138,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'if_stmt':([158,171,],[182,182,]),'parameter_list':([67,98,],[96,129,]),'expr':([62,67,93,98,120,125,127,168,169,181,201,206,220,227,],[89,97,124,97,149,152,153,192,193,197,209,213,225,232,]),'or_test':([62,67,93,98,120,125,127,168,169,181,201,206,220,227,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'init_stmt':([155,],[167,]),'piece_expr':([15,],[22,]),'position':([53,62,67,82,83,91,93,98,107,108,111,112,113,114,116,117,118,120,121,125,127,141,144,145,158,168,169,171,181,189,201,203,206,220,227,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,202,71,211,71,71,71,]),'init_assign_stmt':([49,],[55,]),'global_assign_stmt':([41,],[49,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> input_stmt","S'",1,None,None,None),
  ('input_stmt -> piece_stmt board_stmt player_stmt rule_stmt function_stmt','input_stmt',5,'p_input_stmt','../yaccing.py',54),
  ('piece_stmt -> PIECE : NEWLINE INDENT piece_expr DEDENT','piece_stmt',6,'p_piece_stmt','../yaccing.py',58),
  ('piece_expr -> STRING NUMBER NEWLINE','piece_expr',3,'p_piece_expr','../yaccing.py',62),
  ('piece_expr -> STRING NEWLINE','piece_expr',2,'p_piece_expr','../yaccing.py',63),
  ('piece_expr -> piece_expr STRING NEWLINE','piece_expr',3,'p_piece_expr','../yaccing.py',64),
  ('piece_expr -> piece_expr STRING NUMBER NEWLINE','piece_expr',4,'p_piece_expr','../yaccing.py',65),
  ('board_stmt -> BOARD : NEWLINE INDENT NUMBER NUMBER NEWLINE DEDENT','board_stmt',8,'p_board_stmt','../yaccing.py',77),
  ('player_stmt -> PLAYER : NEWLINE INDENT NUMBER NEWLINE DEDENT','player_stmt',7,'p_player_stmt','../yaccing.py',81),
  ('rule_stmt -> RULE : NEWLINE INDENT action_stmt DEDENT','rule_stmt',6,'p_rule_stmt','../yaccing.py',85),
  ('action_stmt -> ACTION : = ID NEWLINE','action_stmt',5,'p_action_stmt','../yaccing.py',89),
  ('action_stmt -> action_stmt ACTION : = ID NEWLINE','action_stmt',6,'p_action_stmt','../yaccing.py',90),
  ('function_stmt -> FUNCTION : NEWLINE INDENT global_assign_stmt funcdef DEDENT','function_stmt',7,'p_function_stmt','../yaccing.py',97),
  ('function_stmt -> FUNCTION : NEWLINE INDENT global_assign_stmt init_assign_stmt funcdef DEDENT','function_stmt',8,'p_function_stmt','../yaccing.py',98),
  ('stmt -> simple_stmt','stmt',1,'p_stmt','../yaccing.py',105),
  ('stmt -> compound_stmt','stmt',1,'p_stmt','../yaccing.py',106),
  ('simple_stmt -> assign_stmt','simple_stmt',1,'p_simple_stmt','../yaccing.py',110),
  ('simple_stmt -> flow_stmt','simple_stmt',1,'p_simple_stmt','../yaccing.py',111),
  ('compound_stmt -> func_expr NEWLINE','compound_stmt',2,'p_compound_stmt','../yaccing.py',115),
  ('compound_stmt -> for_stmt','compound_stmt',1,'p_compound_stmt','../yaccing.py',116),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','../yaccing.py',117),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','../yaccing.py',118),
  ('assign_stmt -> power : = expr NEWLINE','assign_stmt',5,'p_assign_stmt','../yaccing.py',122),
  ('init_assign_stmt -> DEF INIT : NEWLINE INDENT init_stmt DEDENT','init_assign_stmt',7,'p_init_assign_stmt','../yaccing.py',126),
  ('init_stmt -> STRING NUMBER position NEWLINE','init_stmt',4,'p_init_stmt','../yaccing.py',130),
  ('init_stmt -> init_stmt STRING NUMBER position NEWLINE','init_stmt',5,'p_init_stmt','../yaccing.py',131),
  ('global_assign_stmt -> global_assign_stmt GLOBAL assign_stmt','global_assign_stmt',3,'p_global_assign_stmt','../yaccing.py',139),
  ('global_assign_stmt -> empty','global_assign_stmt',1,'p_global_assign_stmt','../yaccing.py',140),
  ('flow_stmt -> break_stmt','flow_stmt',1,'p_flow_stmt','../yaccing.py',147),
  ('flow_stmt -> continue_stmt','flow_stmt',1,'p_flow_stmt','../yaccing.py',148),
  ('flow_stmt -> return_stmt','flow_stmt',1,'p_flow_stmt','../yaccing.py',149),
  ('funcdef -> DEF ID parameters : suite','funcdef',5,'p_funcdef','../yaccing.py',153),
  ('funcdef -> DEF ID : suite','funcdef',4,'p_funcdef','../yaccing.py',154),
  ('funcdef -> funcdef DEF ID parameters : suite','funcdef',6,'p_funcdef','../yaccing.py',155),
  ('funcdef -> funcdef DEF ID : suite','funcdef',5,'p_funcdef','../yaccing.py',156),
  ('parameters -> parameters , parameter','parameters',3,'p_parameters','../yaccing.py',169),
  ('parameters -> parameter','parameters',1,'p_parameters','../yaccing.py',170),
  ('parameter -> ID','parameter',1,'p_parameter','../yaccing.py',177),
  ('expr -> or_test','expr',1,'p_expr','../yaccing.py',184),
  ('or_test -> and_test','or_test',1,'p_or_test','../yaccing.py',188),
  ('or_test -> or_test OR and_test','or_test',3,'p_or_test','../yaccing.py',189),
  ('and_test -> not_test','and_test',1,'p_and_test','../yaccing.py',196),
  ('and_test -> and_test AND not_test','and_test',3,'p_and_test','../yaccing.py',197),
  ('not_test -> NOT not_test','not_test',2,'p_not_test','../yaccing.py',204),
  ('not_test -> comparison','not_test',1,'p_not_test','../yaccing.py',205),
  ('comparison -> operand','comparison',1,'p_comparison','../yaccing.py',212),
  ('comparison -> comparison = operand','comparison',3,'p_comparison','../yaccing.py',213),
  ('comparison -> comparison > operand','comparison',3,'p_comparison','../yaccing.py',214),
  ('comparison -> comparison < operand','comparison',3,'p_comparison','../yaccing.py',215),
  ('comparison -> comparison > = operand','comparison',4,'p_comparison','../yaccing.py',216),
  ('comparison -> comparison < = operand','comparison',4,'p_comparison','../yaccing.py',217),
  ('comparison -> comparison ~ = operand','comparison',4,'p_comparison','../yaccing.py',218),
  ('operand -> term','operand',1,'p_operand','../yaccing.py',227),
  ('operand -> operand + term','operand',3,'p_operand','../yaccing.py',228),
  ('operand -> operand - term','operand',3,'p_operand','../yaccing.py',229),
  ('term -> factor','term',1,'p_term','../yaccing.py',236),
  ('term -> term * factor','term',3,'p_term','../yaccing.py',237),
  ('term -> term / factor','term',3,'p_term','../yaccing.py',238),
  ('term -> term % factor','term',3,'p_term','../yaccing.py',239),
  ('factor -> power','factor',1,'p_factor','../yaccing.py',246),
  ('factor -> + factor','factor',2,'p_factor','../yaccing.py',247),
  ('factor -> - factor','factor',2,'p_factor','../yaccing.py',248),
  ('power -> atom','power',1,'p_power','../yaccing.py',257),
  ('power -> power trailer','power',2,'p_power','../yaccing.py',258),
  ('atom -> array','atom',1,'p_atom','../yaccing.py',265),
  ('atom -> position','atom',1,'p_atom','../yaccing.py',266),
  ('atom -> ID','atom',1,'p_atom','../yaccing.py',267),
  ('atom -> STRING','atom',1,'p_atom','../yaccing.py',268),
  ('atom -> NUMBER','atom',1,'p_atom','../yaccing.py',269),
  ('atom -> BOOLEAN','atom',1,'p_atom','../yaccing.py',270),
  ('atom -> NIL','atom',1,'p_atom','../yaccing.py',271),
  ('atom -> func_expr','atom',1,'p_atom','../yaccing.py',272),
  ('atom -> ( expr )','atom',3,'p_atom','../yaccing.py',273),
  ('position -> ( expr , expr )','position',5,'p_position','../yaccing.py',285),
  ('array -> [ parameter_list ]','array',3,'p_array','../yaccing.py',289),
  ('trailer -> . ID','trailer',2,'p_trailer','../yaccing.py',293),
  ('trailer -> [ expr ]','trailer',3,'p_trailer','../yaccing.py',294),
  ('func_expr -> ID ( )','func_expr',3,'p_func_expr','../yaccing.py',301),
  ('func_expr -> ID ( parameter_list )','func_expr',4,'p_func_expr','../yaccing.py',302),
  ('parameter_list -> expr','parameter_list',1,'p_parameter_list','../yaccing.py',309),
  ('parameter_list -> parameter_list , expr','parameter_list',3,'p_parameter_list','../yaccing.py',310),
  ('for_stmt -> FOR ID : = NUMBER TO NUMBER : suite','for_stmt',9,'p_for_stmt','../yaccing.py',317),
  ('for_stmt -> FOR ID IN expr : suite','for_stmt',6,'p_for_stmt','../yaccing.py',318),
  ('if_stmt -> IF expr : suite','if_stmt',4,'p_if_stmt','../yaccing.py',325),
  ('if_stmt -> IF expr : suite elseif_stmt','if_stmt',5,'p_if_stmt','../yaccing.py',326),
  ('if_stmt -> IF expr : suite ELSE : suite','if_stmt',7,'p_if_stmt','../yaccing.py',327),
  ('if_stmt -> IF expr : suite elseif_stmt ELSE : suite','if_stmt',8,'p_if_stmt','../yaccing.py',328),
  ('elseif_stmt -> ELSEIF expr : suite','elseif_stmt',4,'p_elseif_stmt','../yaccing.py',340),
  ('elseif_stmt -> elseif_stmt ELSEIF expr : suite','elseif_stmt',5,'p_elseif_stmt','../yaccing.py',341),
  ('while_stmt -> WHILE expr : suite','while_stmt',4,'p_while_stmt','../yaccing.py',348),
  ('suite -> NEWLINE','suite',1,'p_suite','../yaccing.py',352),
  ('suite -> NEWLINE INDENT suite_stmt DEDENT','suite',4,'p_suite','../yaccing.py',353),
  ('suite_stmt -> stmt','suite_stmt',1,'p_suite_stmt','../yaccing.py',360),
  ('suite_stmt -> suite_stmt stmt','suite_stmt',2,'p_suite_stmt','../yaccing.py',361),
  ('return_stmt -> RETURN expr NEWLINE','return_stmt',3,'p_return_stmt','../yaccing.py',369),
  ('continue_stmt -> CONTINUE NEWLINE','continue_stmt',2,'p_continue_stmt','../yaccing.py',374),
  ('break_stmt -> BREAK NEWLINE','break_stmt',2,'p_break_stmt','../yaccing.py',378),
  ('empty -> <empty>','empty',0,'p_empty','../yaccing.py',382),
]
