
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = ':\x8fF&TF=w\x12j\xc9\xb8s\x9e\xe0\x0f'
    
_lr_action_items = {'DEDENT':([73,74,89,90,91,92,93,94,96,97,98,101,103,105,110,111,114,115,116,117,118,122,124,125,128,133,137,138,140,],[-90,-82,-30,110,-17,-16,-15,-28,-14,-92,-19,-20,-21,-29,-91,-93,-96,-95,-18,-81,-94,-89,-83,-22,-84,-85,-87,-86,-88,]),'NEWLINE':([6,7,8,9,10,11,12,16,17,18,20,21,22,23,25,26,28,34,36,37,49,51,53,54,55,57,59,60,62,64,66,67,70,71,72,75,77,80,81,82,83,86,102,104,106,107,108,119,121,123,129,134,135,139,],[-62,-68,-41,-45,-64,-71,-59,-55,-67,-39,-66,-44,-52,-70,-38,-69,-65,-63,-60,-61,73,-43,-53,-54,-75,-72,-42,-74,-77,-47,-46,-48,-56,-58,-57,-40,-76,-78,-49,-50,-51,-73,114,115,116,73,118,73,73,125,73,73,73,73,]),'RETURN':([73,74,84,89,90,91,92,93,94,96,97,98,101,103,105,110,111,114,115,116,117,118,122,124,125,128,133,137,138,140,],[-90,-82,87,-30,87,-17,-16,-15,-28,-14,-92,-19,-20,-21,-29,-91,-93,-96,-95,-18,-81,-94,-89,-83,-22,-84,-85,-87,-86,-88,]),'NUMBER':([4,13,14,15,19,27,29,30,31,33,38,41,42,43,44,46,47,48,50,58,61,65,68,69,73,74,76,84,87,88,89,90,91,92,93,94,96,97,98,100,101,103,105,110,111,114,115,116,117,118,120,122,124,125,127,128,132,133,137,138,140,],[7,7,7,7,7,7,52,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-90,-82,85,7,7,7,-30,7,-17,-16,-15,-28,-14,-92,-19,7,-20,-21,-29,-91,-93,-96,-95,-18,-81,-94,7,-89,-83,-22,7,-84,7,-85,-87,-86,-88,]),'WHILE':([73,74,84,89,90,91,92,93,94,96,97,98,101,103,105,110,111,114,115,116,117,118,122,124,125,128,133,137,138,140,],[-90,-82,88,-30,88,-17,-16,-15,-28,-14,-92,-19,-20,-21,-29,-91,-93,-96,-95,-18,-81,-94,-89,-83,-22,-84,-85,-87,-86,-88,]),'%':([6,7,10,11,12,16,17,20,22,23,26,28,34,36,37,53,54,55,57,60,62,70,71,72,77,80,86,],[-62,-68,-64,-71,-59,-55,-67,-66,47,-70,-69,-65,-63,-60,-61,47,47,-75,-72,-74,-77,-56,-58,-57,-76,-78,-73,]),')':([6,7,8,9,10,11,12,16,17,18,20,21,22,23,25,26,28,34,35,36,37,40,41,51,53,54,55,57,59,60,62,63,64,66,67,70,71,72,75,77,78,79,80,81,82,83,86,],[-62,-68,-41,-45,-64,-71,-59,-55,-67,-39,-66,-44,-52,-70,-38,-69,-65,-63,57,-60,-61,-79,62,-43,-53,-54,-75,-72,-42,-74,-77,80,-47,-46,-48,-56,-58,-57,-40,-76,86,-80,-78,-49,-50,-51,-73,]),'(':([4,13,14,15,19,20,27,30,31,33,38,41,42,43,44,46,47,48,50,58,61,65,68,69,73,74,84,87,88,89,90,91,92,93,94,96,97,98,99,100,101,103,105,110,111,114,115,116,117,118,120,122,124,125,127,128,132,133,137,138,140,],[13,13,13,13,13,41,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-90,-82,13,13,13,-30,13,-17,-16,-15,-28,-14,-92,-19,41,13,-20,-21,-29,-91,-93,-96,-95,-18,-81,-94,13,-89,-83,-22,13,-84,13,-85,-87,-86,-88,]),'+':([4,6,7,9,10,11,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,33,34,36,37,38,41,42,43,44,46,47,48,50,53,54,55,57,58,60,61,62,64,65,66,67,68,69,70,71,72,77,80,81,82,83,86,87,88,100,120,127,132,],[14,-62,-68,30,-64,-71,-59,14,14,14,-55,-67,14,-66,-52,-70,-69,14,-65,14,14,14,-63,-60,-61,14,14,14,14,14,14,14,14,14,-53,-54,-75,-72,14,-74,14,-77,30,14,30,30,14,14,-56,-58,-57,-76,-78,30,30,30,-73,14,14,14,14,14,14,]),'*':([6,7,10,11,12,16,17,20,22,23,26,28,34,36,37,53,54,55,57,60,62,70,71,72,77,80,86,],[-62,-68,-64,-71,-59,-55,-67,-66,46,-70,-69,-65,-63,-60,-61,46,46,-75,-72,-74,-77,-56,-58,-57,-76,-78,-73,]),'-':([4,6,7,9,10,11,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,33,34,36,37,38,41,42,43,44,46,47,48,50,53,54,55,57,58,60,61,62,64,65,66,67,68,69,70,71,72,77,80,81,82,83,86,87,88,100,120,127,132,],[15,-62,-68,31,-64,-71,-59,15,15,15,-55,-67,15,-66,-52,-70,-69,15,-65,15,15,15,-63,-60,-61,15,15,15,15,15,15,15,15,15,-53,-54,-75,-72,15,-74,15,-77,31,15,31,31,15,15,-56,-58,-57,-76,-78,31,31,31,-73,15,15,15,15,15,15,]),',':([6,7,8,9,10,11,12,16,17,18,20,21,22,23,25,26,28,34,35,36,37,39,40,51,53,54,55,57,59,60,62,63,64,66,67,70,71,72,75,77,79,80,81,82,83,86,],[-62,-68,-41,-45,-64,-71,-59,-55,-67,-39,-66,-44,-52,-70,-38,-69,-65,-63,58,-60,-61,61,-79,-43,-53,-54,-75,-72,-42,-74,-77,61,-47,-46,-48,-56,-58,-57,-40,-76,-80,-78,-49,-50,-51,-73,]),'/':([6,7,10,11,12,16,17,20,22,23,26,28,34,36,37,53,54,55,57,60,62,70,71,72,77,80,86,],[-62,-68,-64,-71,-59,-55,-67,-66,48,-70,-69,-65,-63,-60,-61,48,48,-75,-72,-74,-77,-56,-58,-57,-76,-78,-73,]),'.':([6,7,10,11,12,17,20,23,26,28,34,55,57,60,62,77,80,86,95,99,106,],[-62,-68,-64,-71,32,-67,-66,-70,-69,-65,-63,-75,-72,-74,-77,-76,-78,-73,32,-66,-71,]),'TO':([52,],[76,]),'CONTINUE':([73,74,84,89,90,91,92,93,94,96,97,98,101,103,105,110,111,114,115,116,117,118,122,124,125,128,133,137,138,140,],[-90,-82,104,-30,104,-17,-16,-15,-28,-14,-92,-19,-20,-21,-29,-91,-93,-96,-95,-18,-81,-94,-89,-83,-22,-84,-85,-87,-86,-88,]),':':([3,6,7,8,9,10,11,12,16,17,18,20,21,22,23,24,25,26,28,34,36,37,51,53,54,55,57,59,60,62,64,66,67,70,71,72,75,77,80,81,82,83,85,86,95,99,106,109,113,126,130,131,136,],[5,-62,-68,-41,-45,-64,-71,-59,-55,-67,-39,-66,-44,-52,-70,49,-38,-69,-65,-63,-60,-61,-43,-53,-54,-75,-72,-42,-74,-77,-47,-46,-48,-56,-58,-57,-40,-76,-78,-49,-50,-51,107,-73,112,-66,-71,119,121,129,134,135,139,]),'=':([5,6,7,9,10,11,12,16,17,20,21,22,23,26,28,34,36,37,42,44,45,53,54,55,57,60,62,64,66,67,70,71,72,77,80,81,82,83,86,112,],[29,-62,-68,-45,-64,-71,-59,-55,-67,-66,43,-52,-70,-69,-65,-63,-60,-61,65,68,69,-53,-54,-75,-72,-74,-77,-47,-46,-48,-56,-58,-57,-76,-78,-49,-50,-51,-73,120,]),'<':([6,7,9,10,11,12,16,17,20,21,22,23,26,28,34,36,37,53,54,55,57,60,62,64,66,67,70,71,72,77,80,81,82,83,86,],[-62,-68,-45,-64,-71,-59,-55,-67,-66,44,-52,-70,-69,-65,-63,-60,-61,-53,-54,-75,-72,-74,-77,-47,-46,-48,-56,-58,-57,-76,-78,-49,-50,-51,-73,]),'$end':([2,73,74,110,117,],[0,-90,-82,-91,-81,]),'STRING':([4,13,14,15,19,27,30,31,33,38,41,42,43,44,46,47,48,50,58,61,65,68,69,73,74,84,87,88,89,90,91,92,93,94,96,97,98,100,101,103,105,110,111,114,115,116,117,118,120,122,124,125,127,128,132,133,137,138,140,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-90,-82,17,17,17,-30,17,-17,-16,-15,-28,-14,-92,-19,17,-20,-21,-29,-91,-93,-96,-95,-18,-81,-94,17,-89,-83,-22,17,-84,17,-85,-87,-86,-88,]),'FOR':([0,73,74,84,89,90,91,92,93,94,96,97,98,101,103,105,110,111,114,115,116,117,118,122,124,125,128,133,137,138,140,],[1,-90,-82,1,-30,1,-17,-16,-15,-28,-14,-92,-19,-20,-21,-29,-91,-93,-96,-95,-18,-81,-94,-89,-83,-22,-84,-85,-87,-86,-88,]),'ELSE':([73,110,124,128,137,140,],[-90,-91,126,131,-87,-88,]),'ELSEIF':([73,110,124,128,137,140,],[-90,-91,127,132,-87,-88,]),'IN':([3,],[4,]),'[':([4,6,7,10,11,12,13,14,15,17,19,20,23,26,27,28,30,31,33,34,38,41,42,43,44,46,47,48,50,55,57,58,60,61,62,65,68,69,73,74,77,80,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,105,106,110,111,114,115,116,117,118,120,122,124,125,127,128,132,133,137,138,140,],[19,-62,-68,-64,-71,33,19,19,19,-67,19,-66,-70,-69,19,-65,19,19,19,-63,19,19,19,19,19,19,19,19,19,-75,-72,19,-74,19,-77,19,19,19,-90,-82,-76,-78,19,-73,19,19,-30,19,-17,-16,-15,-28,33,-14,-92,-19,-66,19,-20,-21,-29,-71,-91,-93,-96,-95,-18,-81,-94,19,-89,-83,-22,19,-84,19,-85,-87,-86,-88,]),']':([6,7,8,9,10,11,12,16,17,18,20,21,22,23,25,26,28,34,36,37,39,40,51,53,54,55,56,57,59,60,62,64,66,67,70,71,72,75,77,79,80,81,82,83,86,],[-62,-68,-41,-45,-64,-71,-59,-55,-67,-39,-66,-44,-52,-70,-38,-69,-65,-63,-60,-61,60,-79,-43,-53,-54,-75,77,-72,-42,-74,-77,-47,-46,-48,-56,-58,-57,-40,-76,-80,-78,-49,-50,-51,-73,]),'ID':([1,4,13,14,15,19,27,30,31,32,33,38,41,42,43,44,46,47,48,50,58,61,65,68,69,73,74,84,87,88,89,90,91,92,93,94,96,97,98,100,101,103,105,110,111,114,115,116,117,118,120,122,124,125,127,128,132,133,137,138,140,],[3,20,20,20,20,20,20,20,20,55,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-90,-82,99,20,20,-30,99,-17,-16,-15,-28,-14,-92,-19,20,-20,-21,-29,-91,-93,-96,-95,-18,-81,-94,20,-89,-83,-22,20,-84,20,-85,-87,-86,-88,]),'IF':([73,74,84,89,90,91,92,93,94,96,97,98,101,103,105,110,111,114,115,116,117,118,122,124,125,128,133,137,138,140,],[-90,-82,100,-30,100,-17,-16,-15,-28,-14,-92,-19,-20,-21,-29,-91,-93,-96,-95,-18,-81,-94,-89,-83,-22,-84,-85,-87,-86,-88,]),'AND':([6,7,8,9,10,11,12,16,17,18,20,21,22,23,26,28,34,36,37,51,53,54,55,57,59,60,62,64,66,67,70,71,72,75,77,80,81,82,83,86,],[-62,-68,-41,-45,-64,-71,-59,-55,-67,38,-66,-44,-52,-70,-69,-65,-63,-60,-61,-43,-53,-54,-75,-72,-42,-74,-77,-47,-46,-48,-56,-58,-57,38,-76,-78,-49,-50,-51,-73,]),'INDENT':([73,],[84,]),'NIL':([4,13,14,15,19,27,30,31,33,38,41,42,43,44,46,47,48,50,58,61,65,68,69,73,74,84,87,88,89,90,91,92,93,94,96,97,98,100,101,103,105,110,111,114,115,116,117,118,120,122,124,125,127,128,132,133,137,138,140,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-90,-82,23,23,23,-30,23,-17,-16,-15,-28,-14,-92,-19,23,-20,-21,-29,-91,-93,-96,-95,-18,-81,-94,23,-89,-83,-22,23,-84,23,-85,-87,-86,-88,]),'BREAK':([73,74,84,89,90,91,92,93,94,96,97,98,101,103,105,110,111,114,115,116,117,118,122,124,125,128,133,137,138,140,],[-90,-82,102,-30,102,-17,-16,-15,-28,-14,-92,-19,-20,-21,-29,-91,-93,-96,-95,-18,-81,-94,-89,-83,-22,-84,-85,-87,-86,-88,]),'BOOLEAN':([4,13,14,15,19,27,30,31,33,38,41,42,43,44,46,47,48,50,58,61,65,68,69,73,74,84,87,88,89,90,91,92,93,94,96,97,98,100,101,103,105,110,111,114,115,116,117,118,120,122,124,125,127,128,132,133,137,138,140,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-90,-82,26,26,26,-30,26,-17,-16,-15,-28,-14,-92,-19,26,-20,-21,-29,-91,-93,-96,-95,-18,-81,-94,26,-89,-83,-22,26,-84,26,-85,-87,-86,-88,]),'NOT':([4,13,19,27,33,38,41,50,58,61,87,88,100,120,127,132,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'>':([6,7,9,10,11,12,16,17,20,21,22,23,26,28,34,36,37,53,54,55,57,60,62,64,66,67,70,71,72,77,80,81,82,83,86,],[-62,-68,-45,-64,-71,-59,-55,-67,-66,42,-52,-70,-69,-65,-63,-60,-61,-53,-54,-75,-72,-74,-77,-47,-46,-48,-56,-58,-57,-76,-78,-49,-50,-51,-73,]),'OR':([6,7,8,9,10,11,12,16,17,18,20,21,22,23,25,26,28,34,36,37,51,53,54,55,57,59,60,62,64,66,67,70,71,72,75,77,80,81,82,83,86,],[-62,-68,-41,-45,-64,-71,-59,-55,-67,-39,-66,-44,-52,-70,50,-69,-65,-63,-60,-61,-43,-53,-54,-75,-72,-42,-74,-77,-47,-46,-48,-56,-58,-57,-40,-76,-78,-49,-50,-51,-73,]),'~':([6,7,9,10,11,12,16,17,20,21,22,23,26,28,34,36,37,53,54,55,57,60,62,64,66,67,70,71,72,77,80,81,82,83,86,],[-62,-68,-45,-64,-71,-59,-55,-67,-66,45,-52,-70,-69,-65,-63,-60,-61,-53,-54,-75,-72,-74,-77,-47,-46,-48,-56,-58,-57,-76,-78,-49,-50,-51,-73,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'elseif_stmt':([124,],[128,]),'return_stmt':([84,90,],[89,89,]),'not_test':([4,13,19,27,33,38,41,50,58,61,87,88,100,120,127,132,],[8,8,8,51,8,59,8,8,8,8,8,8,8,8,8,8,]),'operand':([4,13,19,27,33,38,41,42,43,44,50,58,61,65,68,69,87,88,100,120,127,132,],[9,9,9,9,9,9,9,64,66,67,9,9,9,81,82,83,9,9,9,9,9,9,]),'array':([4,13,14,15,19,27,30,31,33,38,41,42,43,44,46,47,48,50,58,61,65,68,69,84,87,88,90,100,120,127,132,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'func_expr':([4,13,14,15,19,27,30,31,33,38,41,42,43,44,46,47,48,50,58,61,65,68,69,84,87,88,90,100,120,127,132,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,106,11,11,106,11,11,11,11,]),'flow_stmt':([84,90,],[91,91,]),'continue_stmt':([84,90,],[105,105,]),'assign_stmt':([84,90,],[92,92,]),'factor':([4,13,14,15,19,27,30,31,33,38,41,42,43,44,46,47,48,50,58,61,65,68,69,87,88,100,120,127,132,],[16,16,36,37,16,16,16,16,16,16,16,16,16,16,70,71,72,16,16,16,16,16,16,16,16,16,16,16,16,]),'suite':([49,107,119,121,129,134,135,139,],[74,117,122,124,133,137,138,140,]),'suite_stmt':([84,],[90,]),'compound_stmt':([84,90,],[93,93,]),'break_stmt':([84,90,],[94,94,]),'power':([4,13,14,15,19,27,30,31,33,38,41,42,43,44,46,47,48,50,58,61,65,68,69,84,87,88,90,100,120,127,132,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,95,12,12,95,12,12,12,12,]),'simple_stmt':([84,90,],[96,96,]),'and_test':([4,13,19,33,41,50,58,61,87,88,100,120,127,132,],[18,18,18,18,18,75,18,18,18,18,18,18,18,18,]),'for_stmt':([0,84,90,],[2,98,98,]),'stmt':([84,90,],[97,111,]),'atom':([4,13,14,15,19,27,30,31,33,38,41,42,43,44,46,47,48,50,58,61,65,68,69,84,87,88,90,100,120,127,132,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'comparison':([4,13,19,27,33,38,41,50,58,61,87,88,100,120,127,132,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'term':([4,13,19,27,30,31,33,38,41,42,43,44,50,58,61,65,68,69,87,88,100,120,127,132,],[22,22,22,22,53,54,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'if_stmt':([84,90,],[101,101,]),'parameter_list':([19,41,],[39,63,]),'expr':([4,13,19,33,41,58,61,87,88,100,120,127,132,],[24,35,40,56,40,78,79,108,109,113,123,130,136,]),'or_test':([4,13,19,33,41,58,61,87,88,100,120,127,132,],[25,25,25,25,25,25,25,25,25,25,25,25,25,]),'while_stmt':([84,90,],[103,103,]),'position':([4,13,14,15,19,27,30,31,33,38,41,42,43,44,46,47,48,50,58,61,65,68,69,84,87,88,90,100,120,127,132,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'trailer':([12,95,],[34,34,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> for_stmt","S'",1,None,None,None),
  ('input_stmt -> piece_stmt board_stmt player_stmt rule_stmt function_stmt','input_stmt',5,'p_input_stmt','../yaccing.py',54),
  ('piece_stmt -> PIECE : NEWLINE INDENT piece_expr DEDENT','piece_stmt',6,'p_piece_stmt','../yaccing.py',58),
  ('piece_expr -> STRING NUMBER NEWLINE','piece_expr',3,'p_piece_expr','../yaccing.py',62),
  ('piece_expr -> STRING NEWLINE','piece_expr',2,'p_piece_expr','../yaccing.py',63),
  ('piece_expr -> piece_expr STRING NEWLINE','piece_expr',3,'p_piece_expr','../yaccing.py',64),
  ('piece_expr -> piece_expr STRING NUMBER NEWLINE','piece_expr',4,'p_piece_expr','../yaccing.py',65),
  ('board_stmt -> BOARD : NEWLINE INDENT NUMBER NUMBER NEWLINE DEDENT','board_stmt',8,'p_board_stmt','../yaccing.py',77),
  ('player_stmt -> PLAYER : NEWLINE INDENT NUMBER NEWLINE DEDENT','player_stmt',7,'p_player_stmt','../yaccing.py',81),
  ('rule_stmt -> RULE : NEWLINE INDENT action_stmt DEDENT','rule_stmt',6,'p_rule_stmt','../yaccing.py',85),
  ('action_stmt -> ACTION : = ID NEWLINE','action_stmt',5,'p_action_stmt','../yaccing.py',89),
  ('action_stmt -> action_stmt ACTION : = ID NEWLINE','action_stmt',6,'p_action_stmt','../yaccing.py',90),
  ('function_stmt -> FUNCTION : NEWLINE INDENT global_assign_stmt funcdef DEDENT','function_stmt',7,'p_function_stmt','../yaccing.py',97),
  ('function_stmt -> FUNCTION : NEWLINE INDENT global_assign_stmt init_assign_stmt funcdef DEDENT','function_stmt',8,'p_function_stmt','../yaccing.py',98),
  ('stmt -> simple_stmt','stmt',1,'p_stmt','../yaccing.py',105),
  ('stmt -> compound_stmt','stmt',1,'p_stmt','../yaccing.py',106),
  ('simple_stmt -> assign_stmt','simple_stmt',1,'p_simple_stmt','../yaccing.py',110),
  ('simple_stmt -> flow_stmt','simple_stmt',1,'p_simple_stmt','../yaccing.py',111),
  ('compound_stmt -> func_expr NEWLINE','compound_stmt',2,'p_compound_stmt','../yaccing.py',115),
  ('compound_stmt -> for_stmt','compound_stmt',1,'p_compound_stmt','../yaccing.py',116),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','../yaccing.py',117),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','../yaccing.py',118),
  ('assign_stmt -> power : = expr NEWLINE','assign_stmt',5,'p_assign_stmt','../yaccing.py',122),
  ('init_assign_stmt -> DEF INIT : NEWLINE INDENT init_stmt DEDENT','init_assign_stmt',7,'p_init_assign_stmt','../yaccing.py',126),
  ('init_stmt -> STRING NUMBER position NEWLINE','init_stmt',4,'p_init_stmt','../yaccing.py',130),
  ('init_stmt -> init_stmt STRING NUMBER position NEWLINE','init_stmt',5,'p_init_stmt','../yaccing.py',131),
  ('global_assign_stmt -> global_assign_stmt GLOBAL assign_stmt','global_assign_stmt',3,'p_global_assign_stmt','../yaccing.py',139),
  ('global_assign_stmt -> empty','global_assign_stmt',1,'p_global_assign_stmt','../yaccing.py',140),
  ('flow_stmt -> break_stmt','flow_stmt',1,'p_flow_stmt','../yaccing.py',147),
  ('flow_stmt -> continue_stmt','flow_stmt',1,'p_flow_stmt','../yaccing.py',148),
  ('flow_stmt -> return_stmt','flow_stmt',1,'p_flow_stmt','../yaccing.py',149),
  ('funcdef -> DEF ID parameters : suite','funcdef',5,'p_funcdef','../yaccing.py',153),
  ('funcdef -> DEF ID : suite','funcdef',4,'p_funcdef','../yaccing.py',154),
  ('funcdef -> funcdef DEF ID parameters : suite','funcdef',6,'p_funcdef','../yaccing.py',155),
  ('funcdef -> funcdef DEF ID : suite','funcdef',5,'p_funcdef','../yaccing.py',156),
  ('parameters -> parameters , parameter','parameters',3,'p_parameters','../yaccing.py',169),
  ('parameters -> parameter','parameters',1,'p_parameters','../yaccing.py',170),
  ('parameter -> ID','parameter',1,'p_parameter','../yaccing.py',177),
  ('expr -> or_test','expr',1,'p_expr','../yaccing.py',184),
  ('or_test -> and_test','or_test',1,'p_or_test','../yaccing.py',188),
  ('or_test -> or_test OR and_test','or_test',3,'p_or_test','../yaccing.py',189),
  ('and_test -> not_test','and_test',1,'p_and_test','../yaccing.py',196),
  ('and_test -> and_test AND not_test','and_test',3,'p_and_test','../yaccing.py',197),
  ('not_test -> NOT not_test','not_test',2,'p_not_test','../yaccing.py',204),
  ('not_test -> comparison','not_test',1,'p_not_test','../yaccing.py',205),
  ('comparison -> operand','comparison',1,'p_comparison','../yaccing.py',212),
  ('comparison -> comparison = operand','comparison',3,'p_comparison','../yaccing.py',213),
  ('comparison -> comparison > operand','comparison',3,'p_comparison','../yaccing.py',214),
  ('comparison -> comparison < operand','comparison',3,'p_comparison','../yaccing.py',215),
  ('comparison -> comparison > = operand','comparison',4,'p_comparison','../yaccing.py',216),
  ('comparison -> comparison < = operand','comparison',4,'p_comparison','../yaccing.py',217),
  ('comparison -> comparison ~ = operand','comparison',4,'p_comparison','../yaccing.py',218),
  ('operand -> term','operand',1,'p_operand','../yaccing.py',227),
  ('operand -> operand + term','operand',3,'p_operand','../yaccing.py',228),
  ('operand -> operand - term','operand',3,'p_operand','../yaccing.py',229),
  ('term -> factor','term',1,'p_term','../yaccing.py',236),
  ('term -> term * factor','term',3,'p_term','../yaccing.py',237),
  ('term -> term / factor','term',3,'p_term','../yaccing.py',238),
  ('term -> term % factor','term',3,'p_term','../yaccing.py',239),
  ('factor -> power','factor',1,'p_factor','../yaccing.py',246),
  ('factor -> + factor','factor',2,'p_factor','../yaccing.py',247),
  ('factor -> - factor','factor',2,'p_factor','../yaccing.py',248),
  ('power -> atom','power',1,'p_power','../yaccing.py',257),
  ('power -> power trailer','power',2,'p_power','../yaccing.py',258),
  ('atom -> array','atom',1,'p_atom','../yaccing.py',265),
  ('atom -> position','atom',1,'p_atom','../yaccing.py',266),
  ('atom -> ID','atom',1,'p_atom','../yaccing.py',267),
  ('atom -> STRING','atom',1,'p_atom','../yaccing.py',268),
  ('atom -> NUMBER','atom',1,'p_atom','../yaccing.py',269),
  ('atom -> BOOLEAN','atom',1,'p_atom','../yaccing.py',270),
  ('atom -> NIL','atom',1,'p_atom','../yaccing.py',271),
  ('atom -> func_expr','atom',1,'p_atom','../yaccing.py',272),
  ('atom -> ( expr )','atom',3,'p_atom','../yaccing.py',273),
  ('position -> ( expr , expr )','position',5,'p_position','../yaccing.py',285),
  ('array -> [ parameter_list ]','array',3,'p_array','../yaccing.py',289),
  ('trailer -> . ID','trailer',2,'p_trailer','../yaccing.py',293),
  ('trailer -> [ expr ]','trailer',3,'p_trailer','../yaccing.py',294),
  ('func_expr -> ID ( )','func_expr',3,'p_func_expr','../yaccing.py',301),
  ('func_expr -> ID ( parameter_list )','func_expr',4,'p_func_expr','../yaccing.py',302),
  ('parameter_list -> expr','parameter_list',1,'p_parameter_list','../yaccing.py',309),
  ('parameter_list -> parameter_list , expr','parameter_list',3,'p_parameter_list','../yaccing.py',310),
  ('for_stmt -> FOR ID : = NUMBER TO NUMBER : suite','for_stmt',9,'p_for_stmt','../yaccing.py',317),
  ('for_stmt -> FOR ID IN expr : suite','for_stmt',6,'p_for_stmt','../yaccing.py',318),
  ('if_stmt -> IF expr : suite','if_stmt',4,'p_if_stmt','../yaccing.py',325),
  ('if_stmt -> IF expr : suite elseif_stmt','if_stmt',5,'p_if_stmt','../yaccing.py',326),
  ('if_stmt -> IF expr : suite ELSE : suite','if_stmt',7,'p_if_stmt','../yaccing.py',327),
  ('if_stmt -> IF expr : suite elseif_stmt ELSE : suite','if_stmt',8,'p_if_stmt','../yaccing.py',328),
  ('elseif_stmt -> ELSEIF expr : suite','elseif_stmt',4,'p_elseif_stmt','../yaccing.py',340),
  ('elseif_stmt -> elseif_stmt ELSEIF expr : suite','elseif_stmt',5,'p_elseif_stmt','../yaccing.py',341),
  ('while_stmt -> WHILE expr : suite','while_stmt',4,'p_while_stmt','../yaccing.py',348),
  ('suite -> NEWLINE','suite',1,'p_suite','../yaccing.py',352),
  ('suite -> NEWLINE INDENT suite_stmt DEDENT','suite',4,'p_suite','../yaccing.py',353),
  ('suite_stmt -> stmt','suite_stmt',1,'p_suite_stmt','../yaccing.py',360),
  ('suite_stmt -> suite_stmt stmt','suite_stmt',2,'p_suite_stmt','../yaccing.py',361),
  ('return_stmt -> RETURN expr NEWLINE','return_stmt',3,'p_return_stmt','../yaccing.py',369),
  ('continue_stmt -> CONTINUE NEWLINE','continue_stmt',2,'p_continue_stmt','../yaccing.py',374),
  ('break_stmt -> BREAK NEWLINE','break_stmt',2,'p_break_stmt','../yaccing.py',378),
  ('empty -> <empty>','empty',0,'p_empty','../yaccing.py',382),
]
